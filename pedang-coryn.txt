<!DOCTYPE html>
<html>
<head lang="en">
	<title>Coryn Club - Toram Online Database & Tools</title>
	<link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<meta name="keywords" content="Coryn Club, Toram Online, Game Guide, MMORPG, Android Game, iOS Game, Asobimo, Toram Online Database,
		Drop List, Monster List, Equipment List, Stat Calculator, Skill Simulator, Combo Simulator, Statting Formula, Leveling Guide" />
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ" crossorigin="anonymous">
	<link rel="stylesheet" href="css/main.css">
	<link rel="stylesheet" href="css/animate.css">
	<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
	<link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,400,300,600,700|Six+Caps' rel='stylesheet' type='text/css' />
	<script src="js/jquery.min.js"></script>


	<!-- GOOGLE ANALYTICS JS -->
	<script>
		  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

		  ga('create', 'UA-85513259-1', 'auto');
		  ga('send', 'pageview');
	</script>
	<!-- END OF GOOGLE ANALYTICS JS -->

</head>
<body>
	<link href="css/skill_description.css" rel='stylesheet' type='text/css' />
		<!--header-top-starts-->
    <div id="navbar" style="grid-template-columns: 1fr 1fr" class="grid animated fadeInDown">
		<!-- LEFT GRID -->
        <div id="navbar-main">
			<div id="navbar-logo"><img src="images/cc_logo.gif"></div>
			<div id="navbar-title">
				<a href="index.php">Coryn Club</a>
			</div>
        </div>

		<!-- RIGHT GRID -->
        <div style="display:flex; justify-content:flex-end; align-items:center;">
			<div class="ml-5 mr-5">
				<img id="language_container" width="28" height="28" src="images/lang.png">
				<ul class="language-menu" >
					<li><a href="http://coryn.club">English</a></li>
					<li><a href="http://jp.coryn.club">Japanese</a></li>
					<li><a href="http://indo.coryn.club">Bahasa Indonesia</a></li>
					<li><a href="http://thai.coryn.club">Thai</a></li>
					<li><a href="http://trachn.coryn.club">Traditional Chinese</a></li>
					<li><a href="http://simchn.coryn.club">Simplified Chinese</a></li>
					<li><a href="http://kr.coryn.club">Korean</a></li>
				</ul>
			</div>

            <a href="index.php#index-login"><img class="ml-5 mr-5" src="images/login.png" alt="Sign In" title="Sign In/Register"></a>        </div><!-- END OF RIGHT GRID -->
	</div><!-- END OF NAVBAR -->

	<div id="wrapper">
	<!-- script-for-menu -->
	<script>
		$(document).ready(function() {
			$("body").click(function() {
				$(".username-menu").removeClass('active');
				$(".language-menu").removeClass('active');
			});
		});
	</script>
	    <div id="sidebar" class="animated fadeInLeft fast">
        <div id="sidebar-content">
            <div class="sidebar-content-item-wrapper">
                <div id="main-menu" class="sidebar-content-item active" data-target="tab-1" style="height:100%; display:flex; flex-direction:column; justify-content:space-between">
                    <div class="all-menu"> <!-- all menu stays on top -->
						<p class="sidebar-tab-item-title">Menu</p>
<ul class="menu-root">
	<li><a class="nested" href="javascript: void(1);">Item</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="item.php">All</a></li>
				<li><a href="item.php?special=dye&order=type">Dye</a></li>
				<li><a href="item.php?type=1&order=name">Usable</a></li>
				<li><a href="registlet.php">Registlet</a></li>
				<li><a class="nested" href="javascript: void(1);">Crysta</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="item.php?special=xtal">All</a></li>
							<li><a href="item.php?special=xtal&order=id desc&type=20">Normal</a></li>
							<li><a href="item.php?special=xtal&order=id desc&type=21">Weapon</a></li>
							<li><a href="item.php?special=xtal&order=id desc&type=22">Armor</a></li>
							<li><a href="item.php?special=xtal&order=id desc&type=23">Additional</a></li>
							<li><a href="item.php?special=xtal&order=id desc&type=24">Special</a></li>
						</ul>
					</div>
				</li>
				<li><a class="nested" href="javascript: void(1);">Material</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="material.php?proc=1">Beast</a></li>
							<li><a href="material.php?proc=2">Wood</a></li>
							<li><a href="material.php?proc=3">Metal</a></li>
							<li><a href="material.php?proc=4">Cloth</a></li>
							<li><a href="material.php?proc=5">Medicine</a></li>
							<li><a href="material.php?proc=6">Mana</a></li>
						</ul>
					</div>
				</li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Equipment</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="item.php?special=eq">All</a></li>
				<li><a href="item.php?type=4&order=atk%20ASC,name">1-Handed Sword</a></li>
				<li><a href="item.php?type=5&order=atk%20ASC,name">2-Handed Sword</a></li>
				<li><a href="item.php?type=9&order=atk%20ASC,name">Bow</a></li>
				<li><a href="item.php?type=10&order=atk%20ASC,name">Bowgun</a></li>
				<li><a href="item.php?type=13&order=atk%20ASC,name">Knuckles</a></li>
				<li><a href="item.php?type=15&order=atk%20ASC,name">Magic Device</a></li>
				<li><a href="item.php?type=19&order=atk%20ASC,name">Staff</a></li>
				<li><a href="item.php?type=26&order=atk%20ASC,name">Halberd</a></li>
				<li><a href="item.php?type=27&order=atk%20ASC,name">Katana</a></li>
				<li><a href="item.php?type=11&order=atk%20ASC,name">Dagger</a></li>
				<li><a href="item.php?type=7&order=atk%20ASC,name">Arrow</a></li>
				<li><a href="item.php?type=17&order=def%20ASC,name">Shield</a></li>
				<li><a href="item.php?type=28&order=id,name">Ninjutsu Scroll</a></li>
				<li><a href="item.php?type=8&order=def%20ASC,name">Armor</a></li>
				<li><a href="item.php?type=6&order=def%20ASC,name">Additional</a></li>
				<li><a href="item.php?type=18&order=def%20ASC,name">Special</a></li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Monster</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="monster.php">All</a></li>
				<li><a href="monster.php?type=N&order=level">Normal</a></li>
				<li><a href="monster.php?type=M&order=level">Mini Boss</a></li>
				<li><a href="monster.php?type=B&order=level">Boss</a></li>
				<li><a class="nested" href="javascript: void(1);">Pet/Tamable</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="monster_tameable.php?ele=0">Neutral</a></li>
							<li><a href="monster_tameable.php?ele=1">Fire</a></li>
							<li><a href="monster_tameable.php?ele=2">Water</a></li>
							<li><a href="monster_tameable.php?ele=3">Wind</a></li>
							<li><a href="monster_tameable.php?ele=4">Earth</a></li>
							<li><a href="monster_tameable.php?ele=5">Dark</a></li>
							<li><a href="monster_tameable.php?ele=6">Light</a></li>
						</ul>
					</div>
				</li>
				<li><a class="nested" href="javascript: void(1);">Element</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="monster_element.php?ele=0">Neutral</a></li>
							<li><a href="monster_element.php?ele=1">Fire</a></li>
							<li><a href="monster_element.php?ele=2">Water</a></li>
							<li><a href="monster_element.php?ele=3">Wind</a></li>
							<li><a href="monster_element.php?ele=4">Earth</a></li>
							<li><a href="monster_element.php?ele=5">Dark</a></li>
							<li><a href="monster_element.php?ele=6">Light</a></li>
						</ul>
					</div>
				</li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Quest</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="quest.php">All</a></li>
				<li><a class="nested" href="javascript: void(1);">Sofya</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="quest.php?npc=253">Yunis</a></li>
							<li><a href="quest.php?npc=256">Frente</a></li>
							<li><a href="quest.php?npc=258">Zono</a></li>
							<li><a href="quest.php?npc=259">Forf</a></li>
							<li><a href="quest.php?npc=260">Lefina</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a class="nested" href="javascript: void(1);">El Scaro</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="quest.php?npc=391">Potolo</a></li>
							<li><a href="quest.php?npc=392">Juan</a></li>
							<li><a href="quest.php?npc=398">Filecia</a></li>
							<li><a href="quest.php?npc=394">Rina</a></li>
							<li><a href="quest.php?npc=393">Ravagne</a></li>
						</ul>
					</div>
				</li>
				<li><a href="quest.php?npc=296">Rugio Ruins - Moralo</a></li>
				<li>
					<a class="nested" href="javascript: void(1);">Garden of Beginning</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="quest.php?npc=1737">Noble's Spirit</a></li>
							<li><a href="quest.php?npc=1738">Researcher's Spirit</a></li>
						</ul>
					</div>
				</li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Other DB</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="map.php">Map</a></li>
				<li><a href="skill_menu.php">Skill</a></li>
				<li><a href="furniture_menu.php">Housing</a></li>
				<li><a href="food.php">Food Buff</a></li>
				<li><a href="https://www.facebook.com/pg/corynclub/photos/?tab=album&album_id=686599141510648">Pet Dye</a></li>
				<li><a href="emblem.php">Emblem</a></li>
				<li>
					<a class="nested" href="javascript: void(1);">Craft</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="item.php?special=psmith&order=level">Player Smith</a></li>
							<li><a href="item.php?special=nsmith&order=type,level">NPC Smith</a></li>
							<li><a href="item.php?special=palch&order=level">Player Alchemist</a></li>
							<li><a href="item.php?special=nalch&order=type,level">NPC Alchemist</a></li>
						</ul>
					</div>
				</li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Guide</a>
		<div class="submenu collapse">
			<ul>
				<li><a href="guide.php?key=beginner">Beginner Guide</a></li>
				<li><a href="guide.php?key=petguide">Pet Guide</a></li>
				<li><a href="guide.php?key=smith">Smithing Guide</a></li>
				<li><a href="guide.php?key=status">Status & Damage Calculation Guide</a></li>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">App Showcase</a>
		<div class="submenu collapse">
			<ul>
				<li><a href='app_showcase.php?type=8'>Armor</a></li>
				<li><a href='app_showcase.php?type=6'>Additional Gear</a></li>
				<li><a href='app_showcase.php?type=17'>Shield</a></li>
				<li><a href='app_showcase.php?type=4'>1 Handed Sword</a></li>
				<li><a href='app_showcase.php?type=5'>2 Handed Sword</a></li></li>
				<li><a href='app_showcase.php?type=9'>Bow</a></li>
				<li><a href='app_showcase.php?type=10'>Bowgun</a></li>
				<li><a href='app_showcase.php?type=13'>Knuckles</a></li>
				<li><a href='app_showcase.php?type=15'>Magic Device</a></li>
				<li><a href='app_showcase.php?type=19'>Staff</a></li>
				<li><a href='app_showcase.php?type=26'>Halberd</a></li>
				<li><a href='app_showcase.php?type=27'>Katana</a>
			</ul>
		</div>
	</li>
	<li><a class="nested" href="javascript: void(1);">Tools</a>
		<div class="submenu collapse">
			<ul>
				<li><a class="nested" href="javascript: void(1);">Calculator</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="stat_calculator.php">Stat Calculator</a></li>
							<li><a href="pet_calculator.php">Pet Stat Calculator</a></li>
							<li><a href="quest_calculator.php">Quest Calculator</a></li>
						</ul>
					</div>
				</li>
				<li><a class="nested" href="javascript: void(1);">Simulator</a>
					<div class="submenu collapse">
						<ul>
							<li><a href="statting_simulator.php">Statting Simulator</a></li>
							<li><a href="skill_simulator.php">Skill Simulator</a></li>
							<li><a href="combo_simulator.php">Combo Simulator</a></li>
							<li><a href="app_simulator.php">App Synth Simulator</a></li>
						</ul>
					</div>
				</li>
				<li><a href="leveling.php">Character Leveling</a></li>
				<li><a href="pet_leveling.php">Pet Leveling</a></li>
				<li><a href="pet_fusion_optimizer.php">Pet Fusion Optimizer</a></li>
				<li><a href="formula.php">Statting Formula List</a></li>
				<li><a href="formula_search.php">Statting Formula Search</a></li>
				<li><a href="dye_finder.php">Dye Finder</a></li>
			</ul>
		</div>
	</li>
	<li><a href="/forum/">Forum</a></li>
	<li><a href="credits.php">Credits</a></li>
	</ul>
<p class="sidebar-tab-item-title">Search</p>
<form class="input-search" action="leveling.php">
  <input type="text" name="lv" placeholder="Your Level">
  <button type="submit">
	<i class="fa fa-search"></i>
  </button>
</form>
<form class="input-search" action="monster.php">
  <input type="text" name="name" placeholder="Monster Name">
  <button type="submit">
	<i class="fa fa-search"></i>
  </button>
</form>
<form class="input-search" action="map.php">
  <input type="text" name="name" placeholder="Map Name">
  <button type="submit">
	<i class="fa fa-search"></i>
  </button>
</form>
<form class="input-search" action="item.php">
  <input type="text" name="name" placeholder="Item Name">
  <button type="submit">
	<i class="fa fa-search"></i>
  </button>
</form>
<form class="input-search" action="furniture.php">
  <input type="text" name="name" placeholder="Furniture Name">
  <button type="submit">
	<i class="fa fa-search"></i>
  </button>
</form>
<button class="adv-search-button" onclick="window.location.href = 'itemsearch.php';">Advanced Item Search</button>

					</div> <!-- end of menus -->

                    <div>
					     <p style="font-family: Arial; font-size:13px; font-style:italic; color:#999;">Coryn Club - Toram Online Database is ©Cruithne. Toram Online is ©Asobimo, Inc. All Rights Reserved. </p>
                	</div>
                </div>
            </div>

            <div class="sidebar-content-item-wrapper">
                <div class="sidebar-content-item " data-target="tab-2">
					                    <!-- SAMPLE -->
                    <!--<p class="sidebar-tab-item-title" style="border: 1px solid green; display:block">Guide Content</p>
					<ul class="menu-root">
						<li><a class="nested" href="#">Item</a>
						<li><a class="nested" href="#">Item</a>
					</ul>-->
                </div>
            </div>
        </div>
        <div id="sidebar-tab">
            <div class="sidebar-tab-item active" data-target="tab-1" title="Menu">
                <i class="fas fa-bars fa-lg"></i>
            </div>
            <div class="sidebar-tab-item " data-target="tab-2" title="Extra" style="display:none">
                <i class="fas fa-book fa-lg"></i>
            </div>
            <div class="sidebar-tab-item back-to-top" title="Back To Top">
                <i class="fas fa-chevron-up fa-lg"></i>
            </div>
            <div id="scrollbox" style="flex:1 0 100px;">
            </div>
        </div>
    </div>

		<!-- content -->
	<div id="content" class="animated fadeInUp fast">
			<center>
		<div>
		<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
		<!-- Coryn Club (responsive) -->
		<ins class="adsbygoogle adsense-top"
		     style="display:inline-block;"
		     data-ad-client="ca-pub-6728336374001187"
		     data-ad-slot="4531457552"
		     data-full-width-responsive="false"></ins>
		<script>
		     (adsbygoogle = window.adsbygoogle || []).push({});
		</script>
		</div>
		</center>
	<p class='content-title'>Skill List: Blade </p><div class="card-container-1"><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/hammerslam.png' width='34' height='34'>
        Hammer Slam      </p>
      <p class="medium">
        Skill Hammer Slam Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><br>2-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>100</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>3</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Performs a narrow-range attack around the targets as if you are slamming them down. Guarantees a critical hit on targets immobilized by Flinch or other status ailments. MP Cost becomes 0 if used consecutively.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "hammerSlamLevel" onchange = "calcHammerSlamValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class="sub-title"> <b>Base STR:</b></span>
<input type="number" value="255" min="1" max="510" id="hammerSlamStrValue" onchange="calcHammerSlamValues()" style="width: 50px;"><br>
<span class="sub-title"> <b>Total VIT:</b></span>
<input type="number" value="1" id="hammerSlamVitValue" onchange="calcHammerSlamValues()" style="width: 50px;"><br>
<span class = "sub-title"><b>Target is afflicted with [Flinch]/[Tumble]/[Stun]:</b></span>
<input type = "checkbox" id = "hammerSlamFTS" onchange = "calcHammerSlamValues()"><br>
<br>
<span id = "hammerSlamValues"></span>

<script>
function calcHammerSlamConstant(level, result) {
    result.innerHTML = `<li><b>Skill Constant: </b> 100</li>`
}

function calcHammerSlamMultiplier(level, strValue, vitValue, result) {
    var multiplier = 1 + (0.05*level) + strValue/500 + vitValue/100
    
    function rounding(value) {
        if (value - Math.floor(value*100)/100 < 0.00999999) {value = Math.floor(value*100)/100}
        else {value = Math.round(value*100)/100}
        return value
    }
    
    multiplier = rounding(multiplier)
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
}

function calcHammerSlamSecondHitRange(result) {
	result.innerHTML += `<li><b>Hit Range (radius):</b> 2.5m, around the <b>main target's position on cast</b></li>`
}

function addHammerSlamSkillInfo(interrupt, result) {
    var HTML = ``
    if (interrupt) {HTML += `<li>This skill will <b>always deal critical hits</b></li>`}
    HTML += `<li>Gains the following effects upon using this skill consecutively (the last skill used is also this skill):<ul>
    <li>&nbsp&nbsp&nbsp- This skill's MP Cost becomes 0</li>
    <li>&nbsp&nbsp&nbsp- This skill's proration is changed to <b>Normal Attack Proration</b></li>
    <li>&nbsp&nbsp&nbsp- This skill becomes <b>unaffected by any Proration modifiers</b></li>
    </ul></li>
    <li><b>Effect Duration:</b> Until another skill is used</li>`
	result.innerHTML += HTML
}

function addHammerSlamExtraInfo(result) {
    result.innerHTML += `<br><b>Extra info:</b>
    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>
    <li>This skill can only be used as Combo Start if its MP Cost is not 0</li>
    <li>This skill uses <b>Physical Proration</b> for its damage calculation; it inflicts <b>Physical Proration</b>, but changes to <b>Normal Attack Proration</b> when used consecutively</li>`
}

function calcHammerSlamValues() {
	var levelSelector = document.getElementById("hammerSlamLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var strValue = document.getElementById("hammerSlamStrValue").value
    var vitValue = document.getElementById("hammerSlamVitValue").value
	var interrupt = document.getElementById("hammerSlamFTS").checked
	var result = document.getElementById("hammerSlamValues")
	calcHammerSlamConstant(level, result)
	calcHammerSlamMultiplier(level, strValue, vitValue, result)
	calcHammerSlamSecondHitRange(result)
	addHammerSlamSkillInfo(interrupt, result)
	addHammerSlamExtraInfo(result)
}

calcHammerSlamValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/cleavingattack.png' width='34' height='34'>
        Cleaving Attack      </p>
      <p class="medium">
        Skill Cleaving Attack Level 2      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><br>2-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>3</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Swings the sword horizontally to deal with multiple opponents. If 2 or more targets are involved, the power will increase proportionally and consumed MP will be restored.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "cleavingAttackLevel" onchange = "calcCleavingAttackValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class="sub-title"> <b>Total STR:</b></span>
<input type="number" value="255" id="cleavingAttackStrValue" onchange="calcCleavingAttackValues()" style="width: 50px;"><br>
<span class="sub-title"> <b>Total VIT:</b></span>
<input type="number" value="1" id="cleavingAttackVitValue" onchange="calcCleavingAttackValues()" style="width: 50px;"><br>
<span class="sub-title"><b>Number of enemies within Hit Range:</b></span>
<input type="number" id="cleavingAttackEnemyCount" min="0" max="10" value="1" style="width: 3em;" onchange="calcCleavingAttackValues()"><br>
<br>
<span id = "cleavingAttackValues"></span>

<script>
function calcCleavingAttackConstant(level, vitValue, result) {
    var constant = 150 + 15*level + vitValue*1
    result.innerHTML = `<li><b>Skill Constant: </b> ${constant}</li>`
}

function calcCleavingAttackMultiplier(level, strValue, enemyCount, result) {
    var multiplier = 1.5 + (0.1*level) + (strValue*Math.max(0, enemyCount-1))/200
    if (multiplier - Math.floor(multiplier*100)/100 < 0.00999999) {multiplier = Math.floor(multiplier*100)/100}
    else {multiplier = Math.round(multiplier*100)/100}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
}

function calcCleavingAttackSecondHitRange(result) {
	result.innerHTML += `<li><b>Hit Range (radius):</b> same as the maximum auto attack range of the <b>main weapon</b>, around the <b>caster</b></li>`
}

function addCleavingAttackSkillInfo(enemyCount, result) {
    var mp = Math.max(0, enemyCount-1)*100
	if (mp > 0) {result.innerHTML += `<li>Recovers <b>either ${mp} MP or the total MP Cost of this skill</b> (whichever is lower) upon successful cast</li>`}
}

function addCleavingAttackExtraInfo(enemyCount, result) {
    var HTML = `<br><b>Extra info</b>
    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>`
    if (enemyCount > 1) {HTML += `<li>As stated, this skill's MP recovery effect <b>cannot recover more MP than this skill's own cost</b>; for example, if its MP Cost became 0 due to certain effects (e.g. <b>Save Combo tag</b>), it will not recover any MP at all</li>`}
    result.innerHTML += HTML
}

function calcCleavingAttackValues() {
	var levelSelector = document.getElementById("cleavingAttackLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var strValue = document.getElementById("cleavingAttackStrValue").value
    var vitValue = document.getElementById("cleavingAttackVitValue").value
    var enemyCount = document.getElementById('cleavingAttackEnemyCount').value
	var result = document.getElementById("cleavingAttackValues")
	calcCleavingAttackConstant(level, vitValue, result)
	calcCleavingAttackMultiplier(level, strValue, enemyCount, result)
	calcCleavingAttackSecondHitRange(result)
	addCleavingAttackSkillInfo(enemyCount, result)
	addCleavingAttackExtraInfo(enemyCount, result)
}

calcCleavingAttackValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/stormblaze.png' width='34' height='34'>
        Storm Blaze      </p>
      <p class="medium">
        Skill Storm Blaze Level 3      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><br>2-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>200</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>16</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Attacks enemies in a straight line with an aerial slash. Wind Power will accumulate when a normal attack hits. Wind Power is consumed upon skill activation. Power, attack range, and MP recovery increases according to the amount consumed.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "stormBlazeLevel" onchange = "calcStormBlazeValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class="sub-title"> <b>Total VIT:</b></span>
<input type="number" value="1" id="stormBlazeVitValue" style="width: 50px;" onchange="calcStormBlazeValues()"><br>
<span class="sub-title"> <b>Base DEX:</b></span>
<input type="number" value="255" min="1" max="510" id="stormBlazeDexValue" style="width: 50px;" onchange="calcStormBlazeValues()"><br>
<span class="sub-title"><b>Number of stacks:</b></span>
<input type="number" id="stormBlazeEnemyCount" min="0" max="10" value="0" style="width: 3em;" onchange="calcStormBlazeValues()"><br>
<br>
<span id = "stormBlazeValues"></span>

<script>
function calcMaxStackStormBlaze(dexValue, stackInput) {
	var maxStack = 10 + dexValue/25
    if (maxStack - Math.floor(maxStack) < 0.999999999999) {maxStack = Math.floor(maxStack)}
    else {maxStack = Math.round(maxStack)}
    if (stackInput.value > maxStack) {stackInput.value = maxStack}
    stackInput.max = maxStack
}

function calcStormBlazeConstant(level, vitValue, result) {
    var constant = 100 + 10*level + vitValue*1
    result.innerHTML = `<li><b>Skill Constant: </b> ${constant}</li>`
}

function calcStormBlazeMultiplier(level, stack, result) {
    var multiplier = (0.5 + 0.05*level)*stack
    if (multiplier - Math.floor(multiplier*100)/100 < 0.00999999) {multiplier = Math.floor(multiplier*100)/100}
    else {multiplier = Math.round(multiplier*100)/100}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li>`
}

function calcStormBlazeSecondHitRange(stack, result) {
    var radius = Math.floor(2 + 0.4*stack)
	if (stack > 0) {result.innerHTML += `<br><li><b>Hit Range (radius):</b> length of 16m and radius of ${radius}m; from the <b>caster</b> toward the <b>main target</b></li>`}
}

function addStormBlazeSkillEffect(stackInput, stack, result) {
    var mp = stack*stack*3
    var HTML = `<br><b>Buff Effect:</b>
	<li>Gains stacks upon performing the following actions; can stack up to a maximum of <b>${stackInput.max} stacks</b><ul>
	<li>&nbsp&nbsp&nbsp- Gains 1 stack for each <b>auto attack</b> or <b>consecutive mode Hammer Slam</b></li>
	<li>&nbsp&nbsp&nbsp- Gains 2 stacks for each <b>auto attack during Rampage buff</b></li>
	</ul></li>
	<li>Upon casting this skill,`
	if (stack > 0) {
	    HTML += ` <b>consumes ${stack} stack`
	    if (stack != 1) {HTML += `s`}
	    HTML += `</b> to launch a linear attack, and recovers ${mp} MP`
	}
	else {HTML += ` <b>nothing happens</b>, and the caster will look confused`}
	HTML += `</li>
	<li><b>Buff Duration:</b> Until all stacks are used up</li>`
	result.innerHTML += HTML
}

function addStormBlazeExtraInfo(result) {
    var HTML = `<br><b>Extra info</b>
    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>`
    result.innerHTML += HTML
}

function calcStormBlazeValues() {
	var levelSelector = document.getElementById("stormBlazeLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var dexValue = document.getElementById("stormBlazeDexValue").value
    var vitValue = document.getElementById("stormBlazeVitValue").value
    var stackInput = document.getElementById('stormBlazeEnemyCount')
    var stack = Math.min(10, stackInput.value)
	var result = document.getElementById("stormBlazeValues")
	calcMaxStackStormBlaze(dexValue, stackInput)
	calcStormBlazeConstant(level, vitValue, result)
	calcStormBlazeMultiplier(level, stack, result)
	calcStormBlazeSecondHitRange(stack, result)
	addStormBlazeSkillEffect(stackInput, stack, result)
	addStormBlazeExtraInfo(result)
}

calcStormBlazeValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/gardeblade.png' width='34' height='34'>
        Garde Blade      </p>
      <p class="medium">
        Skill Garde Blade Level 4      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><br>2-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Neutral</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>0</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>A defense technique using a two-handed sword. Boosts Physical/Magic Resistance and improves Guard ability for 70 seconds. Recovers Guard Power a bit when the buff is applied. <b style="color:#E77577">Overwriting won't trigger this recovery.</b></p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>While the effect is active, the weapon's refinement value will work as the shield's refinement value.<br>
VIT affects Guard Power Recovery and it won't recover beyond 100%.<br>
Nullifies ailments causing immobility when Guard is timed perfectly.<br>
<b style="color:#E77577">The buff ends immediately when Guard Power is used up and it can't be used again for some time.</b></p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "gardeBladeLevel" onchange = "calcGardeBladeValues()">
  <option value = "1">1</option>
  <option value = "2">2</option>
  <option value = "3">3</option>
  <option value = "4">4</option>
  <option value = "5">5</option>
  <option value = "6">6</option>
  <option value = "7">7</option>
  <option value = "8">8</option>
  <option value = "9">9</option>
  <option value = "10" selected>10</option>
</select><br>
<span class="sub-title"> <b>Total VIT:</b></span>
<input type="number" value="1" id="gardeBladeVitValue" onchange="calcGardeBladeValues()" style="width: 50px;"><br>
<br>
<span id = "gardeBladeValues"></span>

<script>
function addGardeBladeSkillEffect(level, vitValue, result) {
    var guard = level*2.5 + vitValue/100
    if (guard - Math.floor(guard) < 0.009999999999) {guard = Math.floor(guard*100)/100}
    else {guard = Math.round(guard*100)/100}
    var HTML = `<b>Skill Effect:</b> Recovers your <b>Guard gauge</b> by ${guard} units and grants <b>Garde Blade buff</b> to the <b>caster</b> upon successful cast; can only recover the <b>Guard gauge</b> until 100 units, and the recovery only applies if <b>Garde Blade buff</b> is not active<br><br>
    <b>Buff Effect:</b><br>`
    result.innerHTML = HTML
}

function addGardeBladeBuffEffect(level, result) {
	var ATK = 1*level
	result.innerHTML += `<li>Allows <b>Main Weapon's Refinement Level</b> to grant damage reduction the same as that of a <b>Shield</b> while the buff is active</li>
	<li><b>Physical & Magic Resistance</b> +${level}%</li>
	<li>Upon <b>Perfect Guard</b>, negate any [Flinch], [Tumble], [Stun] or [Knockback] that comes with the blocked hit</li>
	<li><b>Buff Duration:</b> 70 seconds OR until you get [Guard Break]</li>`
}

function addGardeBladeExtraInfo(result) {
	result.innerHTML += `<br><b>Extra info:</b>
	<li><b>Perfect Guard</b> (or <b>"perfectly timed" Manual Guard</b>) refers to the short duration at the start of Manual Guard motion, during when Guard gauge consumption upon taking any hit is halved</li>
	<li>This skill <b>cannot be cast</b> if you have [Guard Break]</li>`
}

function calcGardeBladeValues() {
	var levelSelector = document.getElementById("gardeBladeLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var vitValue = document.getElementById("gardeBladeVitValue").value
	var result = document.getElementById("gardeBladeValues")
	addGardeBladeSkillEffect(level, vitValue, result)
	addGardeBladeBuffEffect(level, result)
	addGardeBladeExtraInfo(result)
}

calcGardeBladeValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/ogreslash.png' width='34' height='34'>
        Ogre Slash      </p>
      <p class="medium">
        Skill Ogre Slash Level 5      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><br>2-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>500</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>3</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Deals damage to the target and after a short while, causes an explosion at the target's feet, dealing additional damage. If the conditions are met, Ogre Power will be accumulated and consumed upon skill activation to increase the power and buff.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Starting a battle, stepping on the warning area, taking damage, or perfectly timing Guard will restore Ogre Power (<b style="color:gold">max 20</b>).<br>
<br>
Rampage's performance is boosted while the buff is active.<br>
Mitigates the drawbacks of Berserk while the buff is active.<br>
Slightly restores HP based on the MP consumed while the buff is active.</p>
        </div>
            </div>
	</div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/hardhit.png' width='34' height='34'>
        Hard Hit      </p>
      <p class="medium">
        Skill Hard Hit Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>100</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Brutally hit the target with the weapon. Chance to inflict [Flinch] on the target.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Flinch Rate +50%</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power +50</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "hardHitWeapon" onchange = "calcHardHitValue()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "hardHitLevel" onchange = "calcHardHitValue()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Hard Hit Enhancer" Registlet Level:</b></span>
<select id = "hardHitRegistlet" onchange = "calcHardHitValue()">
    <option value = "0" selected>Unequipped</option>
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10">10</option>
    <option value = "11">11</option>
    <option value = "12">12</option>
    <option value = "13">13</option>
    <option value = "14">14</option>
    <option value = "15">15</option>
    <option value = "16">16</option>
    <option value = "17">17</option>
    <option value = "18">18</option>
    <option value = "19">19</option>
    <option value = "20">20</option>
</select><br>
<br>
<span id = "hardHitValue"></span>

<script>
function calcHardHitConstant(level, result) {
    var constant = Math.floor(50 + 5*level)
    result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
}

function calcHardHitMultiplier(level, registlet, weapon, result) {
    var multiplier = 1 + (0.05 * level) + (0.05 * registlet)
    if (weapon == "2H") {multiplier += 0.5}
    if (multiplier - Math.floor(multiplier*100)/100 < 0.0099) {multiplier = Math.floor(multiplier*100)/100}
    else {multiplier = Math.round(multiplier*100)/100}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
}

function calcAilmentChanceHardHit(level, weapon, result) {
    var chance = 5
    //The next "if" is pretty much required; the game uses a weird function called Math.RoundToInt, and only for Hard Hit; go figure why
    //If the number has no decimal, there's nothing left to do
    if(4.5 * level == (4.5 * level).toFixed(0)) {
  	    chance += parseInt((4.5 * level).toFixed(0), 10)
	    //If the decimal part is equal to 0.5 (it will be either 0 or 0.5), then the game rounds it up or down to the nearest even number
    }
    else if((4.5 * level).toFixed(0) % 2 == 0) {
        //Checking if the rounded up number is even
        chance += parseInt((4.5 * level).toFixed(0), 10)
    } 
    else {
        //If it's odd, then round it down
        chance += parseInt((4.5 * level).toFixed(0)) - 1
    }
    
    if(weapon == "1H") {chance += 50}
    result.innerHTML += `<li><b>Flinch Chance:</b> ${chance}%</li>`
}

function addHardHitAilmentInfo(result) {
    result.innerHTML += `<li><b>Flinch Duration:</b> 2 seconds</li>
    <li><b>Resistance Duration on Difficulties:</b> 3 second (<b>Easy</b> and <b>Normal</b>); 5 seconds (<b>Hard</b>); 8 seconds (<b>Nightmare</b>); 11 seconds (<b>Ultimate</b>)</li>`
}

function addHardHitExtraInfo(result) {
    result.innerHTML += `<br><b>Extra info:</b>
    <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>
    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>`
}

function calcHardHitValue(){
    let weaponSelector = document.getElementById("hardHitWeapon")
    let weapon = weaponSelector[weaponSelector.selectedIndex].value
    let levelSelector = document.getElementById("hardHitLevel")
    let level = levelSelector[levelSelector.selectedIndex].value
    let registletSelector = document.getElementById("hardHitRegistlet")
    let registlet = registletSelector[registletSelector.selectedIndex].value
    let result = document.getElementById("hardHitValue")
    calcHardHitConstant (level, result)
    calcHardHitMultiplier(level, registlet, weapon, result)
    calcAilmentChanceHardHit(level, weapon, result)
    addHardHitAilmentInfo(result)
    addHardHitExtraInfo(result)
}

calcHardHitValue();
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/astute.png' width='34' height='34'>
        Astute      </p>
      <p class="medium">
        Skill Astute Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>1hs: 100; 2hs: 200</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Strongly hit the target in rapid motion. Critical Rate +25 when this skill is activated.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
MP Cost -100</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power +50<br>
Boosts Critical Rate Buff</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "astuteWeapon" onchange = "calcAstuteValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "astuteLevel" onchange = "calcAstuteValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<br>
<span id = "astuteValues"></span>

<script>
function calcAstuteMpCost(weapon, result) {
	var cost = 200
	if (weapon == "1H") {cost -= 100}
	result.innerHTML = `<li><b>MP Cost:</b> ${cost}</li>`
}

function calcAstuteConstant(level, result) {
    var constant = Math.floor(150 + 5*level)
    result.innerHTML += `<li><b>Skill Constant:</b> ${constant}</li>`
}

function calcAstuteMultiplier(level, weapon, result) {
    var multiplier = 1.5 + (0.1 * level)
    if (weapon == "2H") {multiplier += 0.5}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li>`
}

function calcAstuteMotionSpeed(level, result){
	var motionSpeed = 5 * level
	result.innerHTML += `<br><li><b>Motion Speed</b> of <b>Astute</b> +${motionSpeed}%</li>`
}

function calcAstuteBuffEffect(level, weapon, result) {
	var crit = 25
	var duration = 5
	if (weapon == "2H") {crit *= 2}
	if(level > 5) {duration *= 2}
    result.innerHTML += `<li>Grants <b>Astute buff</b> upon successful cast</li>
    <br><b>Buff Effect:</b>
    <li><b>Critical Rate</b> +${crit}</li>
    <li><b>Buff Duration:</b> ${duration} seconds</li>`
}

function calcAstuteValues() {
	let weaponSelector = document.getElementById("astuteWeapon")
	let weapon = weaponSelector[weaponSelector.selectedIndex].value
	let levelSelector = document.getElementById("astuteLevel")
	let level = levelSelector[levelSelector.selectedIndex].value
	let result = document.getElementById("astuteValues")
	calcAstuteMpCost(weapon, result)
	calcAstuteConstant(level, result)
	calcAstuteMultiplier(level, weapon, result)
	calcAstuteMotionSpeed(level, result)
    calcAstuteBuffEffect(level, weapon, result)
    result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`

}
calcAstuteValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/tiggerslash.png' width='34' height='34'>
        Trigger Slash      </p>
      <p class="medium">
        Skill Trigger Slash Level 2      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Fire</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>Lv1-5: 300mp; Lv6-10: 200mp</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Put power while slashing the target. Enhance Attack MP Heal until the next skill. The motion speeds up one time by this skill.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Perfect Aim</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power +100</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "triggerWeapon" onchange = "calcTriggerValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "triggerLevel" onchange = "calcTriggerValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Elemental Trigger Slash" Registlet equipped:</b></span>
<input type = "checkbox" id = "triggerSlashElement" onchange = "calcTriggerValues()"><br>
<br>
<span id = "triggerValues"></span>

<script>
function calcTriggerSlashMpCost(level, result) {
	var cost = 300
	if (level > 5) {cost -= 100}
	result.innerHTML = `<li><b>MP Cost:</b> ${cost}</li>`
}

function calcTriggerSlashConstant(level, result) {
    var constant = 200 + 10 * level
    result.innerHTML += `<li><b>Skill Constant:</b> ${constant}</li>`
}

function calcTriggerSlashMultiplier(level, weapon, result) {
    var skillMultiplier = 1.5 + (0.05 * level)
    if (weapon == "2H") {skillMultiplier += 1}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${skillMultiplier}</li>`
}

function addTriggerSkillEffect(weapon, registlet, result) {
    var element = ``
    if (registlet) {element = `Weapon Dependent`}
    else {element = `Fire`}
	var HTML = `<li><b>Element:</b> ${element}</li><br>`
	if(weapon == "1H") {HTML += `<li>This skill has the <b>Perfect Aim</b> attribute: it cannot [Miss] or [Graze], but can be [Evaded]</li>`}
	HTML += `<li>Grants <b>Trigger Slash buff</b> upon successful cast</li>`
	result.innerHTML += HTML
}

function calcTriggerBuffEffect(level, result) {
	var AMPR = 2 * level
	result.innerHTML += `<br><b>Buff Effect:</b>
	<li><b>Attack MP Recovery</b> +${AMPR}</li>
	<li>Sets the next skill's <b>Motion Speed</b> to +50%; <b>overrides</b> other <b>Motion Speed</b> effects such as <b>[Freeze]</b>, <b>Swift combo tag</b>, or <b>Chain Cast</b></li>
    <li><b>Buff Duration:</b> Until a skill is used</li>`
}

function calcTriggerValues() {
    var weaponSelector = document.getElementById("triggerWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
    var levelSelector = document.getElementById("triggerLevel")
    var level = levelSelector[levelSelector.selectedIndex].value
    var registlet = document.getElementById("triggerSlashElement").checked
	var result = document.getElementById("triggerValues")
	calcTriggerSlashMpCost(level, result)
	calcTriggerSlashConstant(level, result)
	calcTriggerSlashMultiplier(level, weapon, result)
	addTriggerSkillEffect(weapon, registlet, result)
	calcTriggerBuffEffect(level, result)
    result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
}

calcTriggerValues()
</script></details></p>
  </div>		<div>
		<center>
		<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
				<!-- Coryn Club (responsive) -->
				<ins class="adsbygoogle adsense-material"
					 style="display:inline-block;"
					 data-ad-client="ca-pub-6728336374001187"
					 data-ad-slot="4531457552"
					 data-full-width-responsive="false"></ins>
				<script>
					 (adsbygoogle = window.adsbygoogle || []).push({});
		</script>
		</center>
		</div>
	<div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/rampage.png' width='34' height='34'>
        Rampage      </p>
      <p class="medium">
        Skill Rampage Level 3      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Neutral</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>500</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>0</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Furiously and consecutively attack a target. Greatly enhance normal attacks 10 times and a strong attack will be activated after that.<br>
Unable to be used redundantly.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Normal Attack Power +5 - +50</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Finish Blow +400</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "rampageWeapon" onchange = "calcRampageValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "rampageLevel" onchange = "calcRampageValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Remedial Rampage" Registlet Level:</b></span>
<select id = "rampageRegistlet" onchange = "calcRampageValues()">
    <option value = "0" selected>Unequipped</option>
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10">10</option>
</select><br>
<br>
<span id = "rampageValues">
</span>

<script>
function calcRampageAutoAttack(level, registlet, weapon, result) {
    var constantAA = Math.floor(10 * level)
    var skillMultiplierAA = 0.1 + (0.04 * level)
    if (weapon != "2H") {skillMultiplierAA += 0.05 * level}
    skillMultiplierAA = Math.round(skillMultiplierAA*100)/100
    
    var atkCount = ``
    var dualMod = ``
    var hitCount = 4
    if (registlet > 0) {atkCount += `Next 11`}
    else {atkCount += `First 10`}
    if (weapon == "DW") {
        dualMod = `, <font style = 'color: #C70039'>only apply to main hand damage</font style>`
        hitCount = 7
    }
    var HTML = `<li><b>${atkCount} Auto Attacks Skill Constant</b> +${constantAA}; total constant increase for all hits of 1 auto attack${dualMod}</li>
    <li><b>${atkCount} Auto Attacks Skill Multiplier</b> +${skillMultiplierAA}; total multiplier increase for all hits of 1 auto attack${dualMod}</li>
    <li><b>${atkCount} Auto Attacks Hit Count:</b> ${hitCount} hits; damage calculation is done once then spread evenly between the hits`
    if (weapon == "DW") {HTML += ` alongside the sub-hand damage`}
    HTML += `</li>`
    result.innerHTML = HTML
}

function calcRampageFinalHit(level, registlet, weapon, result) {
    var constantFinal = Math.floor(300 + 20 * level)
    
    var skillMultiplierFinal1 = 0.5 + (0.05 * level)
    var skillMultiplierFinal2 = 2.5 + (0.05 * level)
    var heal = 50 * registlet

    if (weapon == "2H") {
        skillMultiplierFinal1 += 1
        skillMultiplierFinal2 += 3
    }
    skillMultiplierFinal1 = Math.round(skillMultiplierFinal1*100)/100
    
    if (registlet == 0) {result.innerHTML += `<li><b>Final Attack Skill Constant: </b> ${constantFinal}; constant for each hit</li>
    <li><b>Final Attack Skill Multiplier (First 2 hits): </b> ${skillMultiplierFinal1}; multiplier for each hit<br>
    <li><b>Final Attack Skill Multiplier (Third hit): </b> ${skillMultiplierFinal2}<br>
    <li><b>Final Attack Hit Count:</b> 3 hits; damage calculation is done for each hit</li>`}
    else {result.innerHTML += `<li><b>HP restore after the 11th Auto Attack:</b> ${heal}</li>`}
}

function addRampageSkillInfo(result) {
    result.innerHTML += `<br><b>Skill Effect:</b> Grants <b>Rampage buff</b> with 11 stacks to the caster upon cast; each auto attack will consume 1 stack upon hitting a target<br>`
}

function addRampageBuffInfo(level, registlet, weapon, result) {
	var ampr = Math.floor(2.5 * level)
	var atkCount = 10
	if (registlet > 0) {atkCount += 1}
	var HTML = `<br><b>Buff Effects:</b></li>
	<li>Sets the caster's <b>DEF</b>, <b>MDEF</b> and <b>Dodge</b> to 0 (<b>overrides all other DEF, MDEF and Dodge modifiers</b>) and deactivates <b>Power Wave</b> while the buff is active</li>
	<li>Enhances the caster's next ${atkCount} auto attacks and change their hit counts</li>
	<li><b>Attack MP Recovery</b> +${ampr}`
	if (weapon == "DW") {HTML += `; <font style = 'color: #C70039'><b>not doubled</b> by Dual Swords effect</font></li>`}
	HTML += `</li>`
	result.innerHTML += HTML
}

function addRampageFinalAttackInfo(registlet, result) {
    if (registlet == 0) {result.innerHTML += `<li>Replaces the 11th auto attack with an uncancellable "Final Attack" that is treated as a <b>Physical skill</b> with <b>Perfect Aim attribute</b>:
	<ul><li>&nbsp&nbsp&nbsp- It <b>inflicts physical proration</b> and <b>consumes buffs that apply to the next skill</b>; however, it is unaffected by <b>Whack</b>, <b>Short Range Damage</b> stat and <b>Sword Techniques</b></li>
	<li>&nbsp&nbsp&nbsp- It cannot [Miss] or [Graze], but can be [Evaded] (its damage is reduced to 1 instead of being fully evaded)</li>
	<li>&nbsp&nbsp&nbsp- It is unaffected by <b>Motion Speed</b> stat, but can be affected by [Freeze] and <b>Trigger Slash</b></li></ul></li>`}
	else {result.innerHTML += `<li>After the 11th auto attack, restore HP based on the level of <b>Remedial Rampage Registlet</b> equipped</li>`}
}

function addRampageBuffDuration(registlet, result) {
	var duration = 600;
	var whenFinalAttack = ""
	if (registlet == 0) {whenFinalAttack = "when the Final Attack ends"}
	else {whenFinalAttack = "after the 11th auto attack"}
	result.innerHTML += `<li><b>Buff Duration:</b> 10 minutes; the buff is also removed <b>${whenFinalAttack}</b> OR when inflicted with any ailment (the latter can be prevented with <b>Berserk's effect</b>)</li>`
}

function addRampageBuffLockInfo(result){
	result.innerHTML += `<br><b>Extra info:</b>
	<li>This skill <b>cannot be recast</b> if the buff is active; it also <b>cannot be cast if another attack motion modifier skill is active</b> (e.g. <b>Dual Shields</b>,...)</li>
	<li>If this skill is in a <b>combo</b> and is not the first skill of that combo, the <b>combo will be temporarily disabled</b> as long as the buff is active</li>
	<li>Rampage Stack will not be consumed if your auto attack [Missed] or was [Evaded]</li>
	<li>This skill's total damage is <b>unaffected by Combo tags</b></li>`
}

function calcRampageValues(){
    var weaponSelector = document.getElementById("rampageWeapon")
    var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("rampageLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var registletSelector = document.getElementById("rampageRegistlet")
    var registlet = registletSelector[registletSelector.selectedIndex].value
	var result = document.getElementById("rampageValues")
	calcRampageAutoAttack(level, registlet, weapon, result)
	calcRampageFinalHit(level, registlet, weapon, result)
	addRampageSkillInfo(result)
	addRampageBuffInfo(level, registlet, weapon, result)
	addRampageFinalAttackInfo(registlet, result)
	addRampageBuffDuration(registlet, result)
	addRampageBuffLockInfo(result)
}
calcRampageValues();
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/meteorbreaker.png' width='34' height='34'>
        Meteor Breaker      </p>
      <p class="medium">
        Skill Meteor Breaker Level 4      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>600</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Strong attack like a meteor. Chance to inflict [Dizzy] on a target and generate Area of Effect when landing. Become invincible when activating the skill.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>2nd Hit Power increases depending on DEX.<br> Dizzy Rate +75%</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>Dizzy Rate +75%</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>1st Hit Power +200<br> 1st Hit Power increases depending on STR.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "meteorWeapon" onchange = "calcMeteorValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "meteorLevel" onchange = "calcMeteorValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<div id="meteorStrInput">
    <span class="sub-title"> <b>Base STR:</b></span>
    <input type="number" value="255" min="1" max="510" id="meteorStrValue" onchange="calcMeteorValues()" style="width: 50px;">
</div>
<div id="meteorDexInput">
    <span class="sub-title"> <b>Base DEX:</b></span>
    <input type="number" value="255" min="1" max="510" id="meteorDexValue" onchange="calcMeteorValues()" style="width: 50px;">
</div>
<br>
<span id = "meteorValues"></span>

<script>
function weaponStrCheck(weapon, strSection) {
    if (weapon == "2H") {strSection.style = "display: block"}
    else {strSection.style = "display: none"}
}

function weaponDexCheck(weapon, dexSection) {
    if (weapon == "1H") {dexSection.style = "display: block"}
    else {dexSection.style = "display: none"}
}

function calcMeteorConstant(level, result) {
    var constant1 = Math.floor(400 + 20*level)
    result.innerHTML = `<li><b>Skill Constant (First Hit): </b> ${constant1} </li>
    <li><b>Skill Constant (Second Hit): </b> 0</li>`
}

function calcMeteorMultiplier(level, weapon, strValue, dexValue, result) {
    var multiplier1 = 4 + (0.2 * level)
    var multiplier2 = 1 + (0.5 * level)
    if (weapon == "1H") {multiplier2 += dexValue/200}
    else if (weapon == "2H") {multiplier1 += 2 + strValue/1000}
    
    function rounding(value) {
        if (value - Math.floor(value*100)/100 < 0.00999999) {value = Math.floor(value*100)/100}
        else {value = Math.round(value*100)/100}
        return value
    }
    
    multiplier1 = rounding(multiplier1)
    multiplier2 = rounding(multiplier2)
    result.innerHTML += `<li><b>Skill Multiplier (First Hit):</b> ${multiplier1}</li>
    <li><b>Skill Multiplier (Second Hit):</b> ${multiplier2}</li>
    <li><b>Hit Count:</b> 2 hits on the main target; 1 hit on all other targets; damage calculation is done for each hit</li><br>`
}

function calcMeteorSecondHitRange(level, weapon, result){
	var hitRange = 2 + Math.floor((level-1)/3)*0.5
	result.innerHTML += `<li><b>Second Hit Range (radius):</b> ${hitRange}m, around the <b>main target's position on cast</b></li>`
}

function addMeteorInvincibleInfo(result) {
	result.innerHTML += `<li>Upon using this skill, gain [Invincible] for 2 seconds OR until you land</li>`
}

function calcMeteorDizzyChance(level, weapon, result){
	var chance = Math.floor(2.5 * level)
	if (weapon != "2H") {chance += 75}
	result.innerHTML += `<li class = 'skill-ailment'><b>Dizzy Chance (First Hit):</b> ${chance}%</li>
	<li><b>Dizzy Duration:</b> 10 seconds</li>`
}

function calcMeteorValues() {
    var weaponSelector = document.getElementById("meteorWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("meteorLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var strSection = document.getElementById("meteorStrInput")
    var strValue = document.getElementById("meteorStrValue").value
    var dexSection = document.getElementById("meteorDexInput")
    var dexValue = document.getElementById("meteorDexValue").value
	var result = document.getElementById("meteorValues");
	weaponStrCheck(weapon, strSection)
	weaponDexCheck(weapon, dexSection)
	calcMeteorConstant(level, result)
	calcMeteorMultiplier(level, weapon, strValue, dexValue, result)
	calcMeteorSecondHitRange(level, weapon, result);
	addMeteorInvincibleInfo(result);
    calcMeteorDizzyChance(level, weapon, result);
    result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
}

calcMeteorValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/shutout.png' width='34' height='34'>
        Shut-Out      </p>
      <p class="medium">
        Skill Shut-Out Level 5      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>100</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>A merciless blow. If the target is afflicted by Flinch/Tumble/Stun and not bleeding, the damage dealt will increase and the target will be inflicted with [Bleed].</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>Power increases further depending on DEX.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>Power increases further depending on AGI.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>As the increase in base power depends on the skill level, the increase will be very small when the condition is met.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "shutOutWeapon" onchange = "calcShutOutValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "shutOutSkillLevel" onchange = "calcShutOutValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>Target is afflicted with [Flinch]/[Tumble]/[Stun], but not [Bleed]:</b></span>
<input type = "checkbox" id = "shutOutFTS" onchange = "calcShutOutValues()"><br>
<div id="shutOutDexInput">
<span class="sub-title"> <b>Base DEX:</b></span>
<input type="number" value="255" min="1" max="510" id="shutOutDexValue" onchange="calcShutOutValues()" style="width: 50px;">
</div>
<div id="shutOutAgiInput">
<span class="sub-title"> <b>Base AGI:</b></span>
<input type="number" value="255" min="1" max="510" id="shutOutAgiValue" onchange="calcShutOutValues()" style="width: 50px;">
</div>
<br>
<span id = "shutOutValues"></span>

<script>
function shutOutWeaponDWCheck(weapon, agiSection) {
    if (weapon == "DW") {agiSection.style = "display: block"}
    else {agiSection.style = "display: none"}
}

function shutOutWeaponDexCheck(weapon, dexSection) {
    if (weapon == "1H") {dexSection.style = "display: block"}
    else {dexSection.style = "display: none"}
}

function calcShutOutConstant(weapon, result) {
    var constant = 100
    if (weapon == "DW") {constant += 100}
    result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
}

function calcShutOutMultiplier(level, weapon, interrupt, dexValue, agiValue, result) {
    var multiplier1 = 5
    var multiplier2 = 10 + 1*level
    if (weapon == "1H") {
        multiplier1 += dexValue/200
        multiplier2 += 0.5 * level + dexValue/100
    }
    else if (weapon == "DW") {
        multiplier1 += agiValue/400
        multiplier2 += 0.5 * level + agiValue/200
    }
    else {multiplier1 += 1*level}
    
    function rounding(value) {
       if (value - Math.floor(value*100)/100 < 0.00999999) {value = Math.floor(value*100)/100}
        else {value = Math.round(value*100)/100}
        return value
    }

    multiplier1 = rounding(multiplier1)
    multiplier2 = rounding(multiplier2)
    var HTML = `<li><b>Skill Multiplier:</b> `
    if (interrupt) {HTML += multiplier2}
    else {HTML += multiplier1}
    HTML += `</li>`
    result.innerHTML += HTML
}

function addShutOutSkillEffect(weapon, interrupt, result) {
	if (weapon == "1H" && interrupt) {result.innerHTML += `<br><li><b>Total Physical Pierce</b> of this skill is <b>quadrupled</b></li>`}
	else if (weapon == "DW" && interrupt) {result.innerHTML += `<br><li><b>Total Physical Pierce</b> of this skill is <b>doubled</b></li>`}
	else if (weapon == "2H") {result.innerHTML += `<br><li>This skill is <b>unaffected by motion speed modifiers</b></li>`}
}

function calcShutOutBleedChance(interrupt, result) {
	if (interrupt) {result.innerHTML += `<li><b>Bleed Chance:</b> 100%</li>
	<li><b>Bleed Duration:</b> 10 seconds</li>`}
}

function addShutOutExtraInfo(result) {
    result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
}

function calcShutOutValues() {
    let weaponSelector = document.getElementById("shutOutWeapon")
	let weapon = weaponSelector[weaponSelector.selectedIndex].value
	let levelSelector = document.getElementById("shutOutSkillLevel")
	let level = levelSelector[levelSelector.selectedIndex].value
	let interrupt = document.getElementById("shutOutFTS").checked
    let dexSection = document.getElementById("shutOutDexInput")
    let dexValue = document.getElementById("shutOutDexValue").value
    let agiSection = document.getElementById("shutOutAgiInput")
    let agiValue = document.getElementById("shutOutAgiValue").value
	let result = document.getElementById("shutOutValues")
	shutOutWeaponDWCheck(weapon, agiSection)
	shutOutWeaponDexCheck(weapon, dexSection)
	calcShutOutConstant(weapon, result)
	calcShutOutMultiplier(level, weapon, interrupt, dexValue, agiValue, result)
	addShutOutSkillEffect(weapon, interrupt, result)
    calcShutOutBleedChance(interrupt, result)
    addShutOutExtraInfo(result)
}

calcShutOutValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/lunarslash.png' width='34' height='34'>
        Lunar Slash      </p>
      <p class="medium">
        Skill Lunar Slash Level 5      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>400</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Slashes target and magic blade will deal additional damage after a slight delay.<br>
Magic blade may inflict [Fatigue].</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Performs an additional attack if another attack skill is used. This additional attack is unable to inflict [Fatigue], but Critical Rate increases according to the skill level.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "lunarSlashWeapon" onchange = "calcLunarSlashValues()">
    <option value = "1H">1-Handed Sword</option>
    <option value = "2H" selected>2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "lunarSlashSkillLevel" onchange = "calcLunarSlashValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class="sub-title"> <b>Total STR:</b></span>
<input type="number" value="255" id="lunarSlashStrValue" onchange="calcLunarSlashValues()" style="width: 50px;"><br>
<span class="sub-title"> <b>Base INT:</b></span>
<input type="number" value="1" min="1" max="510" id="lunarSlashIntValue" onchange="calcLunarSlashValues()" style="width: 50px;"><br>
<div id="lunarSlashComboInput">
<span class="sub-title"> <b>CRT Stat:</b></span>
<input type="number" value="0" min="0" max="255" id="lunarSlashCrtValue" onchange="calcLunarSlashValues()" style="width: 50px;"><br>
<span class="sub-title"> <b>Position in combo:</b></span>
<input type="number" value="1" min="1" max="10" id="lunarSlashComboCount" onchange="calcLunarSlashValues()" style="width: 30px;">
</div>
<br>
<span id = "lunarSlashValues"></span>

<script>
function weaponComboCheck(weapon, comboSection) {
    if (weapon == "2H") {comboSection.style = "display: block"}
    else {comboSection.style = "display: none"}
}

function calcLunarSlashConstant(weapon, intValue, result) {
    var constant1 = 400
    var constant2 = intValue/2
    if (constant2 - Math.floor(constant2) < 0.9) {constant2 = Math.floor(constant2)}
    else {constant2 = Math.round(constant2)}
    var HTML = `<li><b>Skill Constant (First Hit):</b> ${constant1}</li>
    <li><b>Skill Constant (Magic Blade):</b> ${constant2}</li>`
    if (weapon == "2H") {HTML += `<li><b>Skill Constant (Additional Attack):</b> ${intValue}; constant for each hit</li>`}
    result.innerHTML = HTML
}

function calcLunarSlashMultiplier(level, weapon, strValue, comboCount, result) {
    var multiplier1 = 10
    var multiplier2 = strValue * level * 0.001
    if (multiplier2 - Math.floor(multiplier2*100)/100 < 0.00999999) {multiplier2 = Math.floor(multiplier2*100)/100}
    else {multiplier2 = Math.round(multiplier2*100)/100}
    var HTML = `<li><b>Skill Multiplier (First Hit):</b> ${multiplier1}</li>
    <li><b>Skill Multiplier (Magic Blade):</b> ${multiplier2}</li>`
    if (weapon == "2H") {HTML += `<li><b>Skill Multiplier (Additional Attack):</b> ${multiplier2}; multiplier for each hit</li>`}
    result.innerHTML += HTML
}

function addLunarSlashHitCount(weapon, comboCount, result) {
    var HTML = `<li><b>Hit Count:</b> 2 hits`
    if (weapon == "2H") {HTML += ` on the main target; 1 additional hit for each stack consumed`}
    HTML += `; damage calculation is done for each hit</li><br>`
    result.innerHTML += HTML
}

function calcLunarSlashFatigueChance(level, result) {
    var fatigue = 4 * level
	result.innerHTML += `<li><b>Fatigue Chance (Magic Blade):</b> ${fatigue}%</li>
	<li><b>Fatigue Duration:</b> 10 seconds</li>`
}

function addLunarSlashSkillEffect(level, weapon, crtValue, comboCount, result) {
    var stack = `stack`
    if (comboCount > 1) {stack += `s`}
    var cr = 10*level + 1*crtValue
	if (weapon == "2H") {result.innerHTML += `<br><b>Buff Effect:</b>
	<li>Grants ${comboCount} <b>Lunar Slash ${stack}</b> upon cast; can stack up to a maximum of <b>9 stacks</b></li>
	<li>Hitting a target with an attack skill other than <b>Lunar Slash</b> will consume 1 stack to deal an <b>Additional Attack</b> on that target</li>
	<li>The <b>Additional Attack</b> has a <b>fixed Critical Rate</b> of ${cr}</li>
	<li><b>Buff Duration:</b> Until all stacks are consumed</li>`}
}

function addLunarSlashExtraInfo(weapon, result) {
    result.innerHTML += `<br><b>Extra info:</b>
    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>`
    if (weapon == "2H") {result.innerHTML += `<li>If the used attack skill hits multiple targets, multiple stacks will be consumed accordingly</li>
    <li>The <b>Additional Attack(s)</b> are <b>unaffected by Combo Tags</b></li>
    <li>Strangely, the <b>Additional Attack(s)</b> are always affected by <b>Zero Stance registlet</b>, whether <b>Lunar Slash</b> or the skill that triggers these hit(s) is used out of combo or not; possibly because the attack is treated as "skill that is used out of combo" by the game</li>`}
}

function calcLunarSlashValues() {
    let weaponSelector = document.getElementById("lunarSlashWeapon")
	let weapon = weaponSelector[weaponSelector.selectedIndex].value
	let levelSelector = document.getElementById("lunarSlashSkillLevel")
	let level = levelSelector[levelSelector.selectedIndex].value
    let strValue = document.getElementById("lunarSlashStrValue").value
    let intValue = document.getElementById("lunarSlashIntValue").value
    let crtValue = document.getElementById("lunarSlashCrtValue").value
    let comboSection = document.getElementById("lunarSlashComboInput")
    let comboCount = document.getElementById("lunarSlashComboCount").value
	let result = document.getElementById("lunarSlashValues")
	weaponComboCheck(weapon, comboSection)
	calcLunarSlashConstant(weapon, intValue, result)
	calcLunarSlashMultiplier(level, weapon, strValue, comboCount, result)
	addLunarSlashHitCount(weapon, comboCount, result)
    calcLunarSlashFatigueChance(level, result)
	addLunarSlashSkillEffect(level, weapon, crtValue, comboCount, result)
    addLunarSlashExtraInfo(weapon, result)
}

calcLunarSlashValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/sonicblade.png' width='34' height='34'>
        Sonic Blade      </p>
      <p class="medium">
        Skill Sonic Blade Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>200</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>12</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Thrust enemies by quickly moving toward them. Range and Critical Rate increase as the skill levels up. Become more powerful by using it consecutively.<br>
<br><b>Sonic Blade changes to Super Sonic Blade when used while its buff is active</b><br><br></p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Activation Range +4m<br>
Boosts Critical Rate</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power +50<br> Range (Horizontal) +2m</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "sonicBladeWeapon" onchange = "calcSonicBladeValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "sonicBladeLevel" onchange = "calcSonicBladeValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>Sonic Blade buff is active:</b></span>
<input type = "checkbox" id = "sonicBladeBuff" onchange = "calcSonicBladeValues()"><br>
<div id="sonicBladeBuffInput">
<span class = "sub-title"><b>"Sonic Blade Extender" Registlet Level:</b></span>
<select id = "sonicBladeRegistlet" onchange = "calcSonicBladeValues()">
    <option value = "0" selected>Unequipped</option>
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10">10</option>
    <option value = "11">11</option>
    <option value = "12">12</option>
    <option value = "13">13</option>
    <option value = "14">14</option>
    <option value = "15">15</option>
    <option value = "16">16</option>
    <option value = "17">17</option>
    <option value = "18">18</option>
    <option value = "19">19</option>
    <option value = "20">20</option>
</select><br>
</div>
<br>
<span id = "sonicBladeValues"></span>

<script>
function sonicBladeRegistletCheck(superSonicBlade, sonicBladeBuffSection) {
    if (superSonicBlade) {sonicBladeBuffSection.style = "display: block"}
    else {sonicBladeBuffSection.style = "display: none"}
}

function calcSonicBladeConstant(level, result) {
    var constant = Math.floor(100 + 5 * level)
    result.innerHTML = `<li><b>Skill Constant:</b> ${constant} </li>`
}

function calcSonicBladeMultiplier(level, weapon, superSonicBlade, result) {
    var multiplier = 1 + 0.05 * level
    if (weapon == "2H") {multiplier += 0.5}
	if (superSonicBlade) {multiplier *= 2}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
}

function calcSonicBladeCastRange(level, weapon, result) {
	var castRange = 4 + 4*Math.ceil(level/3)
	if (weapon == "1H") {castRange += 4}
	result.innerHTML += `<li><b>Maximum Cast Range:</b> ${castRange}m</li>`
}

function calcSonicBladeHitRange(weapon, superSonicBlade, result) {
	var hitRange = 1
	if (superSonicBlade) {hitRange += 1}
	if (weapon == "2H") {hitRange += 2}
	result.innerHTML += `<li><b>Hit Range (radius): </b> ${hitRange}m, around the <b>caster</b></li>`
}

function calcSonicBladeCritRate(level, weapon, superSonicBlade, result) {
	var critRate = 1*level
	if(weapon == "1H") {critRate *= 10}
	var name = "Sonic Blade"
	if (superSonicBlade) {name = "Super Sonic Blade"}
	result.innerHTML += `<li><b>Critical Rate</b> of <b>${name}</b> +${critRate}</li>`
}

function addSonicBladeMovementInfo(superSonicBlade, result) {
    var move = "dash"
    if (superSonicBlade) {move = "teleport"}
    var HTML = `<li>The caster will <b>${move}</b> to roughly 0m`
    if (superSonicBlade) {HTML += ` on the other side of`}
    else {HTML += ` in front of`}
    HTML += ` the <b>main target</b> after using this skill, <b>hitting all other enemies along the path</b> within the circular Hit Range`
	HTML += `</li>`
	result.innerHTML += HTML
}

function addSuperSonicBladeInfo(superSonicBlade, result) {
    var buff = ``
	if(superSonicBlade) {buff += `Refreshes`}
	else {buff = `Grants`}
	result.innerHTML += `<li>${buff} <b>Sonic Blade buff</b> upon cast</li>`
}

function addSonicBladeBuffEffect(registlet, superSonicBlade, result) {
	var duration = 5 + registlet*1
	if (superSonicBlade) {result.innerHTML += `<br><b>Buff Effect:</b>
	<li>Changes <b>Sonic Blade</b> into <b>Super Sonic Blade</b> with enhanced effects</li>
	<li><b>Buff Duration:</b> ${duration} seconds; casting <b>Super Sonic Blade</b> before the duration ends will <b>refresh the duration</b></li>`}
}

function addSonicBladeExtraInfo(superSonicBlade, result) {
    var move = "dash"
    if (superSonicBlade) {move = "teleport"}
    var HTML = `<br><b>Extra info:</b>
    <li>The said "0m from the target" of the <b>${move}</b> is the displayed distance from the <b>caster</b> to the <b>edge of the target's circular hitbox</b> (vaguely indicated by their target circle) after the <b>${move}</b>`
    if (!superSonicBlade) {HTML += `; if you are already within said range, the <b>${move}</b> will be skipped`}
    HTML += `</li>`
    result.innerHTML += HTML
}

function calcSonicBladeValues() {
	var weaponSelector = document.getElementById("sonicBladeWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("sonicBladeLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var registletSelector = document.getElementById("sonicBladeRegistlet")
    var registlet = registletSelector[registletSelector.selectedIndex].value
	var superSonicBlade = document.getElementById("sonicBladeBuff").checked
    var sonicBladeBuffSection = document.getElementById("sonicBladeBuffInput")
	var result = document.getElementById("sonicBladeValues")
	sonicBladeRegistletCheck(superSonicBlade, sonicBladeBuffSection)
	calcSonicBladeConstant(level, result)
	calcSonicBladeMultiplier(level, weapon, superSonicBlade, result)
	calcSonicBladeCastRange(level, weapon, result)
	calcSonicBladeHitRange(weapon, superSonicBlade, result)
	addSonicBladeMovementInfo(superSonicBlade, result)
	calcSonicBladeCritRate(level, weapon, superSonicBlade, result)
	addSuperSonicBladeInfo(superSonicBlade, result)
	addSonicBladeBuffEffect(registlet, superSonicBlade, result)
	addSonicBladeExtraInfo(superSonicBlade, result)
}

calcSonicBladeValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/spiralair.png' width='34' height='34'>
        Spiral Air      </p>
      <p class="medium">
        Skill Spiral Air Level 2      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Sharply thrust the target causing wind slashes. No critical damage. When Spiral Air hits a target, Critical Damage increases for a few seconds.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>Boosts Critical Damage Buff (<b style = "color: #E77577">Except with Dual Swords</b>)</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power +50</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "spiralWeapon" onchange = "calcSpiralValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "spiralLevel" onchange = "calcSpiralValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Spiral Air Enhancer" Registlet Level:</b></span>
<select id = "spiralRegistlet" onchange = "calcSpiralValues()">
    <option value = "0" selected>Unequipped</option>
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10">10</option>
    <option value = "11">11</option>
    <option value = "12">12</option>
    <option value = "13">13</option>
    <option value = "14">14</option>
    <option value = "15">15</option>
    <option value = "16">16</option>
    <option value = "17">17</option>
    <option value = "18">18</option>
    <option value = "19">19</option>
    <option value = "20">20</option>
</select><br>
<span class = "sub-title"><b>Total DEX:</b></span>
<input type = "number" id = "spiralDex" value = "1" style = "width: 4em; text-align: right" onchange = "calcSpiralValues()"><br>
<br>
<span id = "spiralValues">
</span>

<script>
function calcSpiralConstant(level, result) {
    result.innerHTML = `<li><b>Skill Constant: </b> 30; constant for each hit</li>`
}

function calcSpiralMultiplier(level, registlet, weapon, result) {
    var multiplier = 0.1 + (0.03 * level) + (0.02 * registlet)
    if (weapon == "2H") {multiplier += 0.05}
    multiplier = Math.round(multiplier*100)/100
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; multiplier for each hit</li>
    <li><b>Hit Count:</b> 10 hits; damage calculation is done once, then copied for the remaining hits</li><br>`
}

function addSpiralSkillInfo(result) {
	result.innerHTML += `<li>This skill<b> cannot deal critical hits</b></li>
	<li>Grants <b>Spiral Air buff</b> upon any successful hit</li>`
}

function calcSpiralBuffCritDamage(level, weapon, spiralDEX, result) {
	var maxCritDamage = 10
	var critDamage = 0.5 + level/2 + spiralDEX/(60 - level)
	if (weapon == "2H") {
		critDamage /= 2
		maxCritDamage /= 2
	}
	if (critDamage - Math.floor(critDamage) < 0.999999) {critDamage = Math.floor(critDamage)}
	else {critDamage = Math.round(critDamage)}
	
	if (critDamage < 1) {critDamage = 1}
	else if (critDamage > maxCritDamage) {critDamage = maxCritDamage}
	result.innerHTML += `<li><b>Critical Damage</b> +${critDamage}</li>`
}

function calcSpiralBuffDuration(level, result) {
	var duration = 1*level
	var HTML = `<li><b>Buff Duration:</b> ${duration} second`
	if (duration != 1) {HTML += `s`}
	HTML += `; any subsequence successful hit will refresh the duration</li>`
	result.innerHTML += HTML
}

function calcSpiralValues() {
	var weaponSelector = document.getElementById("spiralWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("spiralLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var registletSelector = document.getElementById("spiralRegistlet")
    var registlet = registletSelector[registletSelector.selectedIndex].value
	var spiralDEX = document.getElementById("spiralDex").value
	var result = document.getElementById("spiralValues")
	calcSpiralConstant(level, result)
	calcSpiralMultiplier(level, registlet, weapon, result)
	addSpiralSkillInfo(result)
    result.innerHTML += `<br> <span><b>Buff Effect:</b></span>`
    calcSpiralBuffCritDamage(level, weapon, spiralDEX, result)
	calcSpiralBuffDuration(level, result)
    result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
}

calcSpiralValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/swordtempest.png' width='34' height='34'>
        Sword Tempest      </p>
      <p class="medium">
        Skill Sword Tempest Level 3      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>400</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>12</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>A strong slash that generates a tempest. The tempest will deal damage over time. Enemies will be sucked into it once.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Whirlwind Power increases depending on DEX.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Bullet Power +100<br> Bullet Power increases depending on STR.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "tempestWeapon" onchange = "calcTempestValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "tempestLevel" onchange = "calcTempestValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<div id="tempestStrInput">
    <span class="sub-title"> <b>Base STR:</b></span>
    <input type="number" value="255" min="1" max="510" id="tempestStrValue" onchange="calcTempestValues()" style="width: 50px;">
</div>
<div id="tempestDexInput">
    <span class="sub-title"> <b>Base DEX:</b> </span>
    <input type="number" value="255" min="1" max="510" id="tempestDexValue" onchange="calcTempestValues()" style="width: 50px;">
</div>
<span class = "sub-title"><b>"Sword Tempest Extender" Registlet equipped:</b></span>
<input type = "checkbox" id = "tempestRegistlet" onchange = "calcTempestValues()"><br>
<br>
<span id = "tempestValues"></span>

<script>
function weaponStrCheck(weapon, strSection) {
    if (weapon == "2H") {strSection.style = "display: block"}
    else {strSection.style = "display: none"}
}

function weaponDexCheck(weapon, dexSection) {
    if (weapon == "1H") {dexSection.style = "display: block"}
    else {dexSection.style = "display: none"}
}

function calcTempestConstant(level, result) {
    var constant1 = 0
    var constant2 = 80
    result.innerHTML = `<li><b>Skill Constant (Bullet): </b> ${constant1} </li>
    <li><b>Skill Constant (Whirlwind): </b> ${constant2}; constant for each hit </li>`
}

function calcTempestMultiplier(level, weapon, strValue, dexValue, result) {
    var multiplier1 = 1.5 + (0.1 * level)
    var multiplier2 = 0.5 + (0.05 * level)
    if (weapon == "1H") {multiplier2 += dexValue/500}
    else {multiplier1 += 1 + strValue/500}
    
    function rounding(value) {
        if (value - Math.floor(value*100)/100 < 0.00999999) {value = Math.floor(value*100)/100}
        else {value = Math.round(value*100)/100}
        return value
    }
    
    multiplier1 = rounding(multiplier1)
    multiplier2 = rounding(multiplier2)
    result.innerHTML += `<li><b>Skill Multiplier (Bullet): </b> ${multiplier1}</li>
    <li><b>Skill Multiplier (Whirlwind): </b> ${multiplier2}; multiplier for each hit</li>`
}

function calcTempestHitCount(level, registlet, result) {
	var hitCount = 1 + Math.ceil(level/2)
	if (registlet) {hitCount += 1}
	result.innerHTML += `<li><b>Hit Count:</b> 1 hit for Bullet; ${hitCount} hits for Whirlwind; damage calculation is done for each hit</li><br>`
}

function calcTempestHitRange(level, result) {
	var hitRange = Math.floor(2 + level/3)
	result.innerHTML += `<li><b>Hit Range (radius):</b> ${hitRange}m, around the <b>point of impact</b> between the <b>bullet</b> and the <b>main target</b> and around the <b>center of the tempest</b></li>`
}

function addTempestSuctionInfo(result) {
	result.innerHTML += `<li><b>Suction Chance</b>: 50% on <b>bosses</b>; 100% on other targets; only occurs <b>once per target per cast</b></li>
	<li><b>Suction Duration</b>: 1 second</li>`
}

function addTempestExtraInfo(result){
	result.innerHTML += `<br><b>Extra info:</b>
	<li>This skill inflicts <b>Magic Proration</b>, but uses <b>Physical Proration</b> for its damage calculation</li>
	<li>The <b>Bullet</b> is affected by <b>Whack</b>, <b>Long Range passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats; the <b>Whirlwind</b>, on the other hand, is unaffected by them</li>`
}

function calcTempestValues() {
    var weaponSelector = document.getElementById("tempestWeapon")
    var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("tempestLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var strSection = document.getElementById("tempestStrInput")
    var strValue = document.getElementById("tempestStrValue").value
    var dexSection = document.getElementById("tempestDexInput")
    var dexValue = document.getElementById("tempestDexValue").value
    var registlet = document.getElementById("tempestRegistlet").checked
	var result = document.getElementById("tempestValues");
	weaponStrCheck(weapon, strSection)
	weaponDexCheck(weapon, dexSection)
	calcTempestConstant(level, result)
	calcTempestMultiplier(level, weapon, strValue, dexValue, result)
	calcTempestHitCount(level, registlet, result)
	calcTempestHitRange(level, result)
	addTempestSuctionInfo(result)
	addTempestExtraInfo(result)
}

calcTempestValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/busterblade.png' width='34' height='34'>
        Buster Blade      </p>
      <p class="medium">
        Skill Buster Blade Level 4      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>7</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Add aura and slash consecutively. Weapon ATK increases for a few seconds when activating Buster Blade. Restore a small amount of HP when the buff is added. The buff is not overwritten.
<br><br><b>Buster Blade will not overwrite an existing Buster Blade buff</b><br><br></p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>Power increases depending on DEX.<br>
Heal Amount increases depending on VIT.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>Heal Amount increases depending on VIT.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Power Increases depending on STR.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/shield.png'></p>
            <p>Shield</p>
          </div>
          <p>Weapon ATK and Heal Amount increase based on shield ability.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "busterWeapon" onchange = "calcBusterValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "busterLevel" onchange = "calcBusterValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<div id="busterAuraInput">
<span class = "sub-title"><b>"Aura Blade" Skill Level:</b></span>
<select id = "busterAuraLevel" onchange = "calcBusterValues()">
    <option value = "0" selected>0</option>
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10">10</option>
</select><br>
</div>
<div id="busterStrInput">
    <span class="sub-title"><b>Base STR:</b></span>
    <input type="number" value="255" min="1" max="510" id="busterStrValue" onchange="calcBusterValues()" style="width: 50px;">
</div>
<div id="busterDexInput">
    <span class="sub-title"><b>Base DEX:</b></span>
    <input type="number" value="255" min="1" max="510" id="busterDexValue" onchange="calcBusterValues()" style="width: 50px;">
</div>
<div id="busterVitInput">
    <span class="sub-title"><b>Base VIT:</b></span>
    <input type="number" value="1" min="1" max="510" id = "busterVIT" onchange = "calcBusterValues()" style="width: 50px;"><br>
</div>
<div id="shieldInput">
    <span class = "sub-title"><b>Shield equipped:</b> </span>
    <input type = "checkbox" id = "shieldEquipped" onchange = "calcBusterValues()"><br>
</div>
<div id="shieldDefInput">
    <span class="sub-title"><b>Shield DEF:</b></span>
    <input type="number" value = "0" min = "0" id = "shieldDefValue" onchange = "calcBusterValues()" style="width: 50px;"><br>
</div>
<div id="shieldRefineInput">
<span class = "sub-title"><b>Shield Refinement Level:</b></span>
<select id = "shieldRefineLevel" onchange = "calcBusterValues()">
    <option value = "0" selected>+0</option>
    <option value = "1">+1</option>
    <option value = "2">+2</option>
    <option value = "3">+3</option>
    <option value = "4">+4</option>
    <option value = "5">+5</option>
    <option value = "6">+6</option>
    <option value = "7">+7</option>
    <option value = "8">+8</option>
    <option value = "9">+9</option>
    <option value = "10">+E</option>
    <option value = "11">+D</option>
    <option value = "12">+C</option>
    <option value = "13">+B</option>
    <option value = "14">+A</option>
    <option value = "15">+S</option>
</select><br>
</div>
<br>
<span id = "busterValues"></span>

<script>
function weaponAuraCheck(weapon, auraSection) {
    if (weapon == "1H") {auraSection.style = "display: block"}
    else {auraSection.style = "display: none"}
}

function weaponStrCheck(weapon, strSection) {
    if (weapon == "2H") {strSection.style = "display: block"}
    else {strSection.style = "display: none"}
}

function weaponDexCheck(weapon, dexSection) {
    if (weapon == "1H") {dexSection.style = "display: block"}
    else {dexSection.style = "display: none"}
}

function weaponVitCheck(weapon, vitSection) {
    if (weapon != "2H") {vitSection.style = "display: block"}
    else {vitSection.style = "display: none"}
}

function shieldEquipCheck(weapon, shieldSection) {
    if (weapon == "1H") {shieldSection.style = "display: block"}
    else {shieldSection.style = "display: none"}
}

function shieldValueCheck(weapon, shieldEquip, shieldDefSection, shieldRefineSection) {
    if (shieldEquip && weapon == "1H") {
        shieldDefSection.style = "display: block"
        shieldRefineSection.style = "display: block"
    }
    else {
        shieldDefSection.style = "display: none"
        shieldRefineSection.style = "display: none"
    }
}

function calcBusterConstant(level, result) {
    var constant = Math.floor(30 * level)
    result.innerHTML = `<li><b>Skill Constant: </b> ${constant}; total constant of all hits</li>`
}

function calcBusterMultiplier(level, weapon, auraLevel, strValue, dexValue, result) {
    var multiplier = 0.75 * level
    if (weapon == "1H") {
        multiplier += dexValue/200
        if (auraLevel > 0) {multiplier += dexValue/200 + auraLevel*0.2}
    }
    else if (weapon == "2H") {multiplier += strValue/100}
    if (multiplier - Math.floor(multiplier*100)/100 < 0.0099999) {multiplier = Math.floor(multiplier*100)/100}
    else {multiplier = Math.round(multiplier*100)/100}
    
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; total multiplier of all hits</li>
    <li><b>Hit Count:</b> 3 hits; damage calculation is done once then spread evenly between the hits</li>`
}

function addBusterCritInfo(result) {
	result.innerHTML += `<br><li>This skill will <b>always deal critical hits</b></li>
	<li>Grants <b>Buster Blade buff</b> upon successful cast</li>`
}

function calcBusterBuffWeaponATK(level, weapon, shieldEquip, shieldRefine, result) {
	var weaponATK = 1*level
	if (shieldEquip && weapon == "1H") {weaponATK += shieldRefine*1}
	var HTML = `<br><b>Buff Effect:</b>
	<li><b>Weapon ATK</b> +${weaponATK}%`
	if (weapon == "DW") {HTML += `; only applies to the <b>main hand sword</b>`}
	HTML += `</li>`
	result.innerHTML += HTML
}

function calcBusterHpRecovery(weapon, baseVIT, shieldEquip, shieldDef, result) {
	var HPRecovery = 1000
	if (weapon == "1H" || weapon == "DW") {HPRecovery += 2*baseVIT}
	if (shieldEquip && weapon == "1H") {HPRecovery += shieldDef*1}
	result.innerHTML += `<li>The caster <b>recovers</b> ${HPRecovery} HP whenever the <b>buff</b> is successfully applied</li>`
}

function addBusterBuffDuration(result) {
	result.innerHTML += "<li><b>Buff Duration:</b> 10 seconds; <b>cannot be reapplied/refreshed</b> if it's already active</li>";
}

function calcBusterValues(){
	var weaponSelector = document.getElementById("busterWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("busterLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var auraSection = document.getElementById("busterAuraInput")
	var auraLevelSelector = document.getElementById("busterAuraLevel")
	var auraLevel = auraLevelSelector[auraLevelSelector.selectedIndex].value
    var strSection = document.getElementById("busterStrInput")
    var strValue = document.getElementById("busterStrValue").value
    var dexSection = document.getElementById("busterDexInput")
    var dexValue = document.getElementById("busterDexValue").value
    var vitSection = document.getElementById("busterVitInput")
	var baseVIT = document.getElementById("busterVIT").value
    var shieldSection = document.getElementById("shieldInput")
    var shieldEquip = document.getElementById("shieldEquipped").checked
    var shieldDefSection = document.getElementById("shieldDefInput")
	var shieldDef = document.getElementById("shieldDefValue").value
    var shieldRefineSection = document.getElementById("shieldRefineInput")
    var shieldRefineSelector = document.getElementById("shieldRefineLevel")
    var shieldRefine = shieldRefineSelector[shieldRefineSelector.selectedIndex].value
	var result = document.getElementById("busterValues")
	weaponAuraCheck(weapon, auraSection)
	weaponStrCheck(weapon, strSection)
	weaponDexCheck(weapon, dexSection)
	weaponVitCheck(weapon, vitSection)
	shieldEquipCheck(weapon, shieldSection)
	shieldValueCheck(weapon, shieldEquip, shieldDefSection, shieldRefineSection)
	calcBusterConstant(level, result)
	calcBusterMultiplier(level, weapon, auraLevel, strValue, dexValue, result)
	addBusterCritInfo(result)
	calcBusterBuffWeaponATK(level, weapon, shieldEquip, shieldRefine, result)
	calcBusterHpRecovery(weapon, baseVIT, shieldEquip, shieldDef, result)
	addBusterBuffDuration(result)
}

calcBusterValues()
</script></details></p>
  </div>		<div>
		<center>
		<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
				<!-- Coryn Club (responsive) -->
				<ins class="adsbygoogle adsense-material"
					 style="display:inline-block;"
					 data-ad-client="ca-pub-6728336374001187"
					 data-ad-slot="4531457552"
					 data-full-width-responsive="false"></ins>
				<script>
					 (adsbygoogle = window.adsbygoogle || []).push({});
		</script>
		</center>
		</div>
	<div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/aurablade.png' width='34' height='34'>
        Aura Blade      </p>
      <p class="medium">
        Skill Aura Blade Level 5      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>200</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>24</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Slashes and clears your surroundings with a blade surrounded by an aura. The power of the next skill used is 1.2x stronger.<br>
Grants Additional Melee to weapon while active.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>Buffs will not be consumed.<br>
Extends the buffs of Aura Blade by 10 seconds when getting the buffs of "Buster Blade".<br>
The power of Buster Blade increases based on the level acquired.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>The power of the next skill used becomes 1.1x stronger.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>The Additional Melee granted gets reduced to 50%.<br>
The power of the next skill used becomes 1.3x stronger.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "auraBladeWeapon" onchange = "calcAuraBladeValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "auraBladeSkillLevel" onchange = "calcAuraBladeValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<div id="auraBladeOhsInput">
<span class="sub-title"><b>Base DEX:</b></span>
<input type="number" value="255" min="1" max="510" id="auraBladeDexValue" onchange="calcAuraBladeValues()" style="width: 50px;">
</div>
<br>
<span id = "auraBladeValues"></span>

<script>
function auraBladeWeaponCheck(weapon, ohsSection) {
    if (weapon == "1H") {ohsSection.style = "display: block"}
    else {ohsSection.style = "display: none"}
}

function calcAuraBladeConstant(result) {
    var constant = 200
    result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
}

function calcAuraBladeMultiplier(level, result) {
    var skillMultiplier = 5 + 1*level
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${skillMultiplier}</li>`
}

function addAuraBladeHitCount(weapon, result) {
    var hitCount = ``
    if (weapon != "2H") {hitCount += `2 hits; damage calculation is done once then spread evenly between the hits`}
    else {hitCount += `1 hit`}
	result.innerHTML += `<li><b>Hit Count:</b> ${hitCount}</li><br>`
}

function addAuraBladeSkillEffect(level, result) {
	result.innerHTML += `<li><b>Hit Range (radius):</b> 3.5m, around the <b>caster</b></li>
	<li>Grants <b>Aura Blade buff</b> upon successful cast</li>`
}

function addAuraBladePassiveEffect(level, weapon, dexValue, result) {
    var bonusMult = dexValue/200 + level*0.2
    if (bonusMult - Math.floor(bonusMult*100)/100 < 0.0099999) {bonusMult = Math.floor(bonusMult*100)/100}
    else {bonusMult = Math.round(bonusMult*100)/100}
	if (weapon == "1H") {result.innerHTML += `<br><b>Passive Effect:</b> Increases <b>Skill Multiplier</b> of <b>Buster Blade</b> by +${bonusMult}<br>`}
}

function calcAuraBladeBuffEffect(level, weapon, result) {
    var skillDmg = 1.2
    var addMelee = 10 * level
    var duration = `40 seconds`
    if (weapon == "1H") {duration += `; successfully applying <b>Buster Blade buff</b> will extend the remaining duration by 10 seconds`}
    else {duration += ` OR until a skill is used`}
    if (weapon == "DW") {skillDmg -= 0.1}
    else if (weapon == "2H") {
        skillDmg += 0.1
        addMelee -= 50
        if (addMelee < 0) {addMelee = 0}
    }
    skillDmg = Math.round(skillDmg*10)/10
    var HTML = `<br><b>Buff Effect:</b>
	<li>Increases the damage of`
	if (weapon == "1H") {HTML += ` all skills used by ${skillDmg} times while the buff is active`}
	else {HTML += ` the next skill used by ${skillDmg} times`}
	HTML += `; stacks <b>additively</b> with <b>Brave Aura</b> and <b>Mana Recharge</b>, and <b>does not apply to this skill itself</b></li>`
	if (addMelee > 0) {HTML += `<li><b>Additional Melee</b> +${addMelee}%</li>`}
	HTML += `<li><b>Buff Duration:</b> ${duration}</li>`
	result.innerHTML += HTML
}

function calcAuraBladeValues() {
	let weaponSelector = document.getElementById("auraBladeWeapon")
	let weapon = weaponSelector[weaponSelector.selectedIndex].value
	let levelSelector = document.getElementById("auraBladeSkillLevel")
	let level = levelSelector[levelSelector.selectedIndex].value
    let ohsSection = document.getElementById("auraBladeOhsInput")
    let dexValue = document.getElementById("auraBladeDexValue").value
	let result = document.getElementById("auraBladeValues")
	auraBladeWeaponCheck(weapon, ohsSection)
	calcAuraBladeConstant(result)
	calcAuraBladeMultiplier(level, result)
	addAuraBladeHitCount(weapon, result)
	addAuraBladeSkillEffect(level, result)
	addAuraBladePassiveEffect(level, weapon, dexValue, result)
	calcAuraBladeBuffEffect(level, weapon, result)
}

calcAuraBladeValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/swordmastery.png' width='34' height='34'>
        Sword Mastery      </p>
      <p class="medium">
        Skill Sword Mastery Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Passive</p>
    </div>
          <div>
        <p class="accent-bold"></p>
        <p>Neutral</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Get better at swordsmanship. ATK of One/Two-Handed Swords increases.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "swordMasteryLevel" onchange = "calcSwordMasteryValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<br>
<span id = "swordMasteryValues"></span>

<script>
function calcSwordMasteryATK(level, result) {
	var ATK = 1 + Math.ceil((level - 2)/5)
	result.innerHTML = `<li><b>ATK</b> +${ATK}%</li>`
}

function calcSwordMasteryWeaponATK(level, result) {
	var weaponATK = 3 * level
	result.innerHTML += `<li><b>Weapon ATK</b> +${weaponATK}%</li>`
}

function addSwordMasteryInfo(result) {
	result.innerHTML += `<br>This passive can affect the <b>sub-hand sword's Weapon ATK</b> and <b>ATK</b> of Dual Swords`
}

function calcSwordMasteryValues() {
	var levelSelector = document.getElementById("swordMasteryLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
	var result = document.getElementById("swordMasteryValues")
	calcSwordMasteryATK(level, result)
	calcSwordMasteryWeaponATK(level, result)
	addSwordMasteryInfo(result)
}

calcSwordMasteryValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/quickslash.png' width='34' height='34'>
        Quick Slash      </p>
      <p class="medium">
        Skill Quick Slash Level 1      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Passive</p>
    </div>
          <div>
        <p class="accent-bold"></p>
        <p>Neutral</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Shorten the Attack Intervals of One/Two-Handed Swords.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "quickSlashLevel" onchange = "calcQuickSlashValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<br>
<span id = "quickSlashValues"></span>

<script>
function calcQuickSlashASPD(level, result) {
	result.innerHTML = `<li><b>Attack Speed</b> +${level}%</li>`
}

function calcQuickSlashFlatASPD(level, result) {
	result.innerHTML += `<li><b>Attack Speed</b> +${10*level}</li>`
}

function calcQuickSlashValues() {
	let levelSelector = document.getElementById("quickSlashLevel")
	let level = levelSelector[levelSelector.selectedIndex].value
	let result = document.getElementById("quickSlashValues")
	calcQuickSlashASPD(level, result)
	calcQuickSlashFlatASPD(level, result)
}

calcQuickSlashValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/swordtechniques.png' width='34' height='34'>
        Sword Techniques      </p>
      <p class="medium">
        Skill Sword Techniques Level 2      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Passive</p>
    </div>
          <div>
        <p class="accent-bold"></p>
        <p>Neutral</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Learn the mastership of swords. The damage dealt of Blade Skill increases.</p>
    </div>
      </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Skill Level:</b></span>
<select id = "swordTechniquesLevel" onchange = "calcSwordTechniquesDamageUp()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<br>
<span id = "swordTechniquesValues"></span>

<script>
function calcSwordTechniquesDamageUp() {
	var levelSelector = document.getElementById("swordTechniquesLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
	var result = document.getElementById("swordTechniquesValues")
	result.innerHTML = `Increases the damage of all skills from the <b>Blade Skills Tree</b> by ${2*level}%`
}

calcSwordTechniquesDamageUp()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/warcry.png' width='34' height='34'>
        War Cry      </p>
      <p class="medium">
        Skill War Cry Level 3      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/all.png"><br>Available with all weapons    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Neutral</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>0</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Perform a rallying cry. Increases ATK for a while. Removes status ailment: [Fear].</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p><b style = "color: gold">[Get the same effect when used with Dual Swords]</b><br>
Duration +50sec</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Boosts ATK</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "warCryWeapon" onchange = "calcWarCryValues()">
	<option value = "1H" selected>1-Handed Sword</option>
	<option value = "2H">2-Handed Sword</option>
	<option value = "other">Other</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "warCryLevel" onchange = "calcWarCryValues()">
  <option value = "1">1</option>
  <option value = "2">2</option>
  <option value = "3">3</option>
  <option value = "4">4</option>
  <option value = "5">5</option>
  <option value = "6">6</option>
  <option value = "7">7</option>
  <option value = "8">8</option>
  <option value = "9">9</option>
  <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Dominant War Cry" Registlet equipped:</b></span>
<input type = "checkbox" id = "warCryRegistlet" onchange = "calcWarCryValues()"><br>
<br>
<span id = "warCryValues"></span>

<script>
function addWarCryFearInfo(registlet, result) {
    var HTML = `<b>Skill Effect:</b> Removes [Fear] ailment from and grants <b>War Cry buff</b> to the <b>caster</b> and <b>party members</b> upon successful cast`
	if (registlet) {HTML += `; this skill's activation <b>cannot be interrupted by [Fear] ailment</b>`}
	HTML += `<br><b>Buff Effect:</b><br>`
    result.innerHTML = HTML
}

function calcWarCryBuffATK(level, weapon, result) {
	var ATK = 1*level
	if (weapon == "2H") {ATK += 5}
	result.innerHTML += `<li><b>ATK</b> +${ATK}%</li>`
}

function calcWarCryBuffDuration(level, weapon, result) {
	var duration = 15 + 1*level
	if (weapon == "1H") {duration += 50}
	result.innerHTML += `<li><b>Buff Duration:</b> ${duration} seconds</li>`
}

function addWarCryExtraInfo(result) {
	result.innerHTML += `<br><b>Extra info:</b>
	<li>If another party member casts this skill, the buff <b>will not be refreshed</b> if these conditions apply, in the following order:<ul>
	<li>&nbsp&nbsp&nbsp- The <b>skill level</b> of the newer War Cry is <b>lower</b> than the previous one's</li>
	<li>&nbsp&nbsp&nbsp- The <b>duration</b> of the newer War Cry is <b>lower</b> than the previous one's</li></ul>
	Due to that, the "better" Two-Handed Sword version of the buff can be overwritten by the "weaker" One-Handed Sword version if both are of the same <b>skill level</b>, since the latter always has far longer duration than the former</li>`
}

function calcWarCryValues(){
	var weaponSelector = document.getElementById("warCryWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("warCryLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var registlet = document.getElementById("warCryRegistlet").checked
	var result = document.getElementById("warCryValues")
	addWarCryFearInfo(registlet, result)
	calcWarCryBuffATK(level, weapon, result)
	calcWarCryBuffDuration(level, weapon, result)
	addWarCryExtraInfo(result)
}

calcWarCryValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/berserk.png' width='34' height='34'>
        Berserk      </p>
      <p class="medium">
        Skill Berserk Level 4      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/all.png"><br>Available with all weapons    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Neutral</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>500</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>0</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Stop thinking and wield the weapon like a berserker. Increase Normal Attack Power/Attack Speed/Critical Rate for a few seconds and greatly decrease Stability/DEF/MDEF. Rampage is not removed by status ailments while it is in effect.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>Reduce the decrease of Stability.<br>
Reduce the decrease of DEF. (<b style = "color: #E77577">Except Dual Swords</b>)<br>
Reduce the decrease of MDEF. (<b style = "color: #E77577">Except Dual Swords</b>)<br>
Duration +20sec</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>Boosts Critical Rate<br>
Reduces the decrease of Stability.<br>
Duration +20sec</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "berserkWeapon" onchange = "calcBerserkValues()">
	<option value = "1H" selected>1-Handed Sword</option>
	<option value = "DW">Dual Swords</option>
	<option value = "2H">2-Handed Sword</option>
	<option value = "other">Other</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "berserkLevel" onchange = "calcBerserkValues()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<span class = "sub-title"><b>"Berserk Control" Registlet equipped:</b></span>
<input type = "checkbox" id = "berserkRegistlet" onchange = "calcBerserkValues()"><br>
<br>
<span id = "berserkValues"></span>

<script>
function addBerserkRegistletEffect(level, registlet, result) {
    var preserveChance = 10 * level
    var HTML = ``
    if (registlet) {
        HTML += `<b>Passive Effect:</b> `
        if (preserveChance < 100) {HTML += `${preserveChance}% chance to p`}
        else {HTML += `P`}
        HTML += `revent <b>Rampage buff</b> from being <b>removed by ailments</b><br><br>
        <b>Active Effect:</b> Grants <b>Berserk buff</b> upon cast<br>`
    }
    result.innerHTML += HTML
}

function calcBerserkBuffASPDIncrease(level, result) {
	var ASPD1 = 10 * level
	var ASPD2 = 100 * level
	result.innerHTML += `<span><b>Buff Effect:</b><br></span>
	<li><b>Attack Speed</b> +${ASPD1}%</li>
	<li><b>Attack Speed</b> +${ASPD2}</li>`
}

function calcBerserkBuffAutoIncrease(level, weapon, result) {
	var AAMult = 0.1 * level
	AAMult = Math.round(AAMult*100)/100
	var autoAttackInfo = `<li><b>Auto Attack Skill Multiplier</b> +${AAMult}`
	if (weapon == "DW"){
		autoAttackInfo += `; <span style = 'color: #8db7e0'><b>only applies to the main hand attacks</span></b>`
	}
	autoAttackInfo += `</li>`
	result.innerHTML += autoAttackInfo
}

function calcBerserkBuffCritRateIncrease(level, weapon, result) {
	var critRate = 2.5 * level
	if (weapon == "2H") {critRate *= 2}
    critRate = Math.floor(critRate)
	result.innerHTML += `<li><b>Critical Rate</b> +${critRate}</li>`
}

function calcBerserkBuffStabilityDecrease(level, weapon, result){
	var stability = 100 - 5*level
	if (weapon != "other") {stability /= 2}
	stability = Math.floor(stability)
	var stabilityInfo = `<li style = 'color: #C70039'><b>Stability</b> -${stability}%`
	if (weapon == "DW") {stabilityInfo += `; <span style = 'color: #8db7e0'><b>does not affect the sub-hand sword's Stability</span></b>`}
	stabilityInfo += `</li>`
	result.innerHTML += stabilityInfo
}

function calcBerserkBuffPMDEFDecrease(level, weapon, result) {
	var DEF = 100 - 1 * level
	if (weapon == "1H") {DEF /= 2}
	DEF = Math.floor(DEF)
	result.innerHTML += `<li style = 'color: #C70039'><b>DEF</b> -${DEF}%</li>
	<li style = 'color: #C70039'><b>MDEF</b> -${DEF}%</li>`
}

function addBerserkRampageAilmentInfo(level, registlet, result) {
	if (!(level == 10 && registlet)) {result.innerHTML += `<li><b>Prevents Rampage buff</b> from being <b>removed by ailments</b></li>`}
}

function calcBerserkBuffDuration(weapon, result) {
	var duration = 10
	if (weapon != "other") {duration += 20}
	result.innerHTML += `<li><b>Buff Duration:</b> ${duration} seconds</li>`
}

function calcBerserkValues() {
	var weaponSelector = document.getElementById("berserkWeapon")
	var weapon = weaponSelector[weaponSelector.selectedIndex].value
	var levelSelector = document.getElementById("berserkLevel")
	var level = levelSelector[levelSelector.selectedIndex].value
    var registlet = document.getElementById("berserkRegistlet").checked
	var result = document.getElementById("berserkValues")
	result.innerHTML = "" //avoid repeating
	addBerserkRegistletEffect(level, registlet, result)
	calcBerserkBuffASPDIncrease(level, result)
	calcBerserkBuffAutoIncrease(level, weapon, result)
	calcBerserkBuffCritRateIncrease(level, weapon, result)
	calcBerserkBuffStabilityDecrease(level, weapon, result)
	calcBerserkBuffPMDEFDecrease(level, weapon, result)
	addBerserkRampageAilmentInfo(level, registlet, result)
	calcBerserkBuffDuration(weapon, result)
}

calcBerserkValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/gladiate.png' width='34' height='34'>
        Gladiate      </p>
      <p class="medium">
        Skill Gladiate Level 5      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Neutral</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>0</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>No</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>0</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Reduces the damage received for a certain number of times for 10 seconds. Slightly restores MP when damage is reduced.<br>
Restores 10 MP per number of damage reduction effects remaining when the time is up.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ohs.png'></p>
            <p>1-Handed Sword</p>
          </div>
          <p>The amount of MP recovered increases when damage gets reduced.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>The amount of MP recovered is halved when damage gets reduced.<br>
Damage reduction is doubled.</p>
        </div>
              <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/ths.png'></p>
            <p>2-Handed Sword</p>
          </div>
          <p>The amount of MP recovered slightly increases when damage gets reduced.<br>
Damage reduction is doubled.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "gladiateWeapon" onchange = "calcGladiateValues()">
    <option value = "1H" selected>1-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
    <option value = "2H">2-Handed Sword</option>
</select><br>
<span class="sub-title"><b>Skill Level:</b></span>
<select id="gladiateSkillLevel" onchange="calcGladiateValues()">
    <option value="1">1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
    <option value="7">7</option>
    <option value="8">8</option>
    <option value="9">9</option>
    <option value="10" selected>10</option>  
</select><br>
<span class = "sub-title"><b>Total Attack MP Recovery:</b></span>
<input type = "number" id = "gladiateAmprInput" value = "30" style = "width: 3em; text-align: right" onchange = "calcGladiateValues()">
<div id="gladiateDWAmprInput">
<span>(value before Dual Swords' AMPR-doubling effect)</span>
</div><br>
<br>
<span id="gladiateValues"></span>

<script>
function weaponDWCheck(weapon, dwSection) {
    if (weapon == "DW") {dwSection.style = "display: inline"}
    else {dwSection.style = "display: none"}
}

function calcGladiateBuff(level, weapon, ampr, result) {
    var dmgReduc = level
    var mpHeal = ampr * level/10
    if (weapon != "1H") {dmgReduc *= 2}
    if (weapon == "DW") {mpHeal *= 0.5}
    else if (weapon == "2H") {mpHeal *= 0.75}
    if (mpHeal - Math.floor(mpHeal) < 0.99) {mpHeal = Math.floor(mpHeal)}
    else {mpHeal = Math.round(mpHeal)}
    var HTML = `<b>Buff Effect:</b>
    <li>Grants <b>Gladiate buff</b> with ${level} stack`
    if (level > 1) {HTML += `s`}
    HTML += `</li><li>Each time you receive attack damage while this buff is active, consumes 1 stack to reduce the received damage by ${dmgReduc}% and recover ${mpHeal} MP</li>
    <li>Recovers 10 MP for each remaining stack <b>when the buff duration ends</b></li>
    <li><b>Buff Duration:</b> 10 seconds</li><br>`
    result.innerHTML = HTML
}

function addGladiateExtra(result) {
    result.innerHTML += `<b>Extra Info:</b>
    <li>Recasting this skill while the buff is already active will <b>reset the duration back to 10 seconds</b>; as this is <b>not treated</b> as "buff duration ends", the MP recovery effect will not activate in this case</li>`
}

function calcGladiateValues() {
	let weaponSelector = document.getElementById("gladiateWeapon")
	let weapon = weaponSelector[weaponSelector.selectedIndex].value
    let levelSelector = document.getElementById("gladiateSkillLevel")
    let level = levelSelector[levelSelector.selectedIndex].value
	let ampr = document.getElementById("gladiateAmprInput").value
    let dwSection = document.getElementById("gladiateDWAmprInput")
    let result = document.getElementById("gladiateValues")
    weaponDWCheck(weapon, dwSection)
    calcGladiateBuff(level, weapon, ampr, result)
    addGladiateExtra(result)
}

calcGladiateValues()
</script></details></p>
  </div><div>  <div style="display:grid;grid-template-columns: 1fr 1fr;">
    <div>
      <p class="card-title">
        <img src='skill/blade/swiftattack.png' width='34' height='34'>
        Swift Attack      </p>
      <p class="medium">
        Skill Swift Attack Level 3      </p>
    </div>
    <div style="justify-self:end;">
      <img src="images/icon/ths.png"><img src="images/icon/ohs.png"><br>2-Handed Sword/1-Handed Sword only    </div>
  </div>
  <hr class="separator">
  <div class="monster-prop">
    <div>
      <p class="accent-bold">Type</p>
      <p>Active, Physical skill</p>
    </div>
          <div>
        <p class="accent-bold">Element</p>
        <p>Weapon Dependent</p>
      </div>
      <div>
        <p class="accent-bold">MP</p>
        <p>Dual Swords: 200; Other: 300</p>
      </div>
		  <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
      <div>
        <p class="accent-bold">Combo start</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Combo middle</p>
        <p>Yes</p>
      </div>
      <div>
        <p class="accent-bold">Range</p>
        <p>2</p>
      </div>
        <div class="span-2">
      <p class="accent-bold">Description</p>
      <p>Kick while pretending to attack with a sword. This skill has "normal attack proration". MP Cost for the next skill used will be reduced when the skill reaches its maximum level.</p>
    </div>
                  <div class="span-2">
          <div class="accent-bold" style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
            <p><img src='images/icon/dw.png'></p>
            <p>Dual Swords</p>
          </div>
          <p>MP Cost -100<br> Chance to make target Tumble.</p>
        </div>
            </div>
	    <p class="accent-bold">Extras</p>
    <p><details><summary>Show more...</summary><br><span class = "sub-title"><b>Weapon:</b></span>
<select id = "swiftAttackWeapon" onchange = "calcswiftAttackValue()">
    <option value = "12H" selected>1-Handed/2-Handed Sword</option>
    <option value = "DW">Dual Swords</option>
</select><br>
<span class = "sub-title"><b>Skill Level:</b></span>
<select id = "swiftAttackLevel" onchange = "calcswiftAttackValue()">
    <option value = "1">1</option>
    <option value = "2">2</option>
    <option value = "3">3</option>
    <option value = "4">4</option>
    <option value = "5">5</option>
    <option value = "6">6</option>
    <option value = "7">7</option>
    <option value = "8">8</option>
    <option value = "9">9</option>
    <option value = "10" selected>10</option>
</select><br>
<br>
<span id = "swiftAttackValue">
</span>

<script>
function calcSwiftAttackMpCost(weapon, result) {
	var cost = 300
	if (weapon == "DW") {cost -= 100}
	result.innerHTML = `<li><b>MP Cost:</b> ${cost}</li>`
}

function calcSwiftAttackConstant(level, result) {
    var constant = ((level+1)^2)*3
    constant = Math.floor(constant)
    if (constant > 300) {constant = 300}
    result.innerHTML += `<li><b>Skill Constant: </b> ${constant} </li>`
}

function calcSwiftAttackMultiplier(level, result) {
    var multiplier = 0.3 + (0.05 * level)
    multiplier = Math.round(multiplier*100)/100
    if (multiplier > 0.75) {multiplier = 0.75}
    result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li>`
}

function calcEffectSwiftAttack(level, weapon, result) {
    var HTML = ``
    if (level == 10) {
        HTML += `<br><li>Grants <b>Swift Attack buff</b> upon cast</li>`
        if (weapon == "DW") {HTML += `<li><b>Tumble Chance:</b> 100%</li>
        <li><b>Tumble Duration:</b> 3 seconds</li>
        <li><b>Resistance Duration on Difficulties:</b> 6 seconds (<b>Easy</b> and <b>Normal</b>); 9 seconds (<b>Hard</b>); 15 seconds (<b>Nightmare</b>); 21 seconds (<b>Ultimate</b>)</li>`}
        HTML += `<br><b>Buff Effect:</b>
        <li>The next <b>skill</b> has its <b>MP Cost halved</b>, rounded up to the nearest multiple of 100</li>
        <li><b>Buff Duration:</b> Until a skill is used</li>`
    }
    result.innerHTML += HTML
}

function addSwiftAttackExtraInfo(weapon, result) {
    var HTML = `<br><b>Extra info:</b>`
    if (weapon == "DW") {HTML += `<li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>`}
    HTML += `<li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>
    <li>This skill inflicts <b>Normal Attack Proration</b>, but uses <b>Physical Proration</b> for its damage calculation</li>`
    result.innerHTML += HTML
}

function calcswiftAttackValue() {
    var weaponSelector = document.getElementById("swiftAttackWeapon")
    var weapon = weaponSelector[weaponSelector.selectedIndex].value
    var levelSelector = document.getElementById("swiftAttackLevel")
    var level = levelSelector[levelSelector.selectedIndex].value
    let result = document.getElementById("swiftAttackValue")
    calcSwiftAttackMpCost(weapon, result)
    calcSwiftAttackConstant (level, result)
    calcSwiftAttackMultiplier(level, result)
    calcEffectSwiftAttack(level, weapon, result)
    addSwiftAttackExtraInfo(weapon, result)
}

calcswiftAttackValue()
</script></details></p>
  </div></div>	</div>
	<!-- content ends -->

		</div> <!-- END OF CONTENT WRAPPER -->

	<script src="js/sohacky.js"></script>
    <script>
        /* Top nav */
        $("#username_container").click(function(e) {
            e.preventDefault();
            e.stopPropagation();
            $(".username-menu").toggleClass('active');
            $("#username_chevron_up").toggleClass('active');
            $("#username_chevron_down").toggleClass('active');
        })
        $("#language_container").click(function(e) {
			e.preventDefault();
			e.stopPropagation();
			$(".language-menu").toggleClass('active');
			$("#language_chevron_up").toggleClass('active');
			$("#language_chevron_down").toggleClass('active');
        })

        /* Sidebar */
        if ($(window).width() <= 950) {
            $("#sidebar").removeClass('animated fadeInLeft fast');
            $(".sidebar-content-item").removeClass('active');;
            $(".sidebar-tab-item").removeClass('active');;
        }

        $('.sidebar-tab-item').on('click',function(ev){
            const target = ev.currentTarget.dataset.target;
            if(!target){
                return;
            }
            if ($(window).width() <= 950) {
                if(!ev.currentTarget.classList.contains('active') && !$("#sidebar").hasClass('active')){
                    $("#sidebar").addClass('active')
                }else if(ev.currentTarget.classList.contains('active')){
                    $(".sidebar-content-item").removeClass('active');;
                    $(".sidebar-tab-item").removeClass('active');;
                    $("#sidebar").removeClass('active');
                    return;
                }
            }
            $(`.sidebar-content-item[data-target!="${target}"]`).removeClass('active');;
            $(`.sidebar-content-item[data-target="${target}"]`).addClass('active');

            $(`.sidebar-tab-item[data-target!="${target}"]`).removeClass('active');;
            $(`.sidebar-tab-item[data-target="${target}"]`).addClass('active');
        });

        $('.back-to-top').on('click',(ev) => {
            ev.preventDefault();
            var $anchor = $(this);
            $('#content').stop().animate({
                scrollTop: 0
            }, 500);
        });

        /* Sidebar Menu */
        $('ul.menu-root a.nested').click(function(e){
            if(e.target.tagName === 'A'){
                $(this).toggleClass('expanded');
                $(this).siblings('div.submenu').toggleClass('collapse');
            }
        })

        /* Pagination JS */
        $('body').on('click','.pagination-js-btn', (e) => {
            let pagebtn = $(e.currentTarget);
            let list = $(pagebtn.parent().data('target'));
            let pagenumber = parseInt(pagebtn.data('page-number'));
            changePage($(list),pagenumber);
        })
        function changePage(list,pagenumber){
            let disp = list.data('display');
            let accord = list.data('accord');
            let listitems = list.children('.pagination-js-items').children();
            let total = listitems.length;
            let perpage = list.data('perpage');
            let totalpage = Math.ceil(total / perpage);
            let currentpage = list.data('current-page');
            let pagination = $('[data-target="#' + list.attr('id') + '"].pagination-js-btngroup');
            let pstart = pagenumber;
            let numbtn = 3;
            let offset = Math.floor(numbtn / 2);
            if(pagenumber <= 0 || pagenumber > totalpage){
                return;
            }
            list.data('current-page',pagenumber);
            pstart -= offset;
             if(pstart < 1){
                pstart = 1;
            }else if(pstart + numbtn > totalpage){
                pstart = totalpage - (numbtn - 1)
                if(pstart < 1) pstart = 1;
            }
            pagination.html('');
            let prev = pagenumber - 1;
            let next = pagenumber + 1;
            let active = false;
            listitems.each((idx,elem) => {
                let num = idx + 1;
                if(num <= pagenumber * perpage && num >= (pagenumber * perpage) - (perpage - 1) ){
                    $(elem).css('display',disp);
                }else{
                    $(elem).css('display','none');
                }
            });
            pagination.append(`<a href="#" class="pagination-js-btn" data-page-number="${1}"><i class="fas fa-angle-double-left"></i></a>`);
            pagination.append(`<a href="#" class="pagination-js-btn" data-page-number="${prev}"><i class="fas fa-angle-left"></i></a>`);
            for(let i  = pstart, j = 0;j < numbtn && i <= totalpage;i++,j++){
                if(i === pagenumber){
                    active = true;
                }else{
                    active = false;
                }
                pagination.append(`<a href="#" class="pagination-js-btn ${(active)?'active':''}" data-page-number="${i}">${i}</a>`);
            }
            pagination.append(`<a href="#" class="pagination-js-btn" data-page-number="${next}"><i class="fas fa-angle-right"></i></a>`);
            pagination.append(`<a href="#" class="pagination-js-btn" data-page-number="${totalpage}"><i class="fas fa-angle-double-right"></a>`);
            if(totalpage < 2){
                pagination.css('display','none');
            }

            //fix height if inside accordion
            if(typeof accord !== 'undefined' && $(accord).get(0).style.maxHeight!=0)
            		$(accord).get(0).style.maxHeight = $(accord).get(0).scrollHeight + 30 + "px";

        }

        /* Accordion */
        $('body').on('click','ul.accordion > li > div:first-child',accordionOnClick);
        function accordionOnClick(e){
            const item = $(e.currentTarget).parent();
            const accordion = item.parent();
            const content = item.children('div:nth-child(2)');
            const aItem = item.siblings('.active');
            const aContent = aItem.children('div:nth-child(2)');
            if(item.hasClass('active')){
                content.get(0).style.maxHeight = 0;
            }else{
                content.get(0).style.maxHeight = content.get(0).scrollHeight + 30 + "px";
            }

            if(aItem.length > 0){
                aContent.get(0).style.maxHeight = 0;
                aItem.toggleClass('active');
            }
            item.toggleClass('active');
        }
        function accordionInit(){
          $('ul.accordion > li.active > div:first-child').each((_,target) => {
            const item = $(target).parent();
            const content = item.children('div:nth-child(2)');
            content.get(0).style.maxHeight = content.get(0).scrollHeight + 30 + "px";
          })
        }

		/* Page Initialization */
        accordionInit();	//accordion goes first, so the init height is calculated correctly
        $('.js-pagination').each((ilist, list) => {
			changePage($(list),1);
        })

    </script>

</body>
</html>